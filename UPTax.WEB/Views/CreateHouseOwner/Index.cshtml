@model UPTax.Model.Models.HouseOwner
@using UPTax.Model.Models

@{
    ViewBag.Title = "সংরক্ষণ";
    var title = "খানার প্রধান";

    Layout = "~/Views/Shared/_AdminLayout.cshtml";

    List<Gender> genders = ViewBag.Genders == null ? new List<Gender>() : ViewBag.Genders;
    List<Religion> religions = ViewBag.Religions == null ? new List<Religion>() : ViewBag.Religions;
    string dateFormat = UPTax.Helper.RapidSession.DateTimeFormat;
}
<style>
    div.inline .form-control {
        display: inline;
    }
</style>

<div class="page-title-box">
    <div class="container-fluid">
        <div class="row align-items-center">
            <div class="col-md-8">
                <h4 class="page-title mb-1">@title</h4>
                <ol class="breadcrumb m-0">
                    <li class="breadcrumb-item"><a href="@Url.Action("Index")">অপারেট করুন</a></li>
                    <li class="breadcrumb-item active">@title যোগ করুন</li>
                </ol>
            </div>
        </div>
    </div>
</div>

<div class="page-content-wrapper">
    <div class="container-fluid">
        <div class="row">
            <div class="col-lg-12">
                <div class="card">
                    <div class="card-body">
                        <div class="float-right ml-2">
                            <a class="btn btn-sm btn-warning btn-flat margin" href="@Url.Action("Index")">তালিকা দেখুন</a>
                        </div>
                        <h4 class="header-title">@title সংরক্ষণ ফরম</h4>
                        <p class="card-title-desc"></p>
                        @using (Html.BeginForm("Index", "CreateHouseOwner", FormMethod.Post, new { @class = "needs-validation", novalidate = "novalidate", @enctype = "multipart/form-data" }))
                        {
                            @Html.AntiForgeryToken()

                            <div class="row">
                                <div class="col-md-4 mb-3">
                                    <label for="validationCustom03">@Html.DisplayNameFor(model => model.WardInfoId) <span class="required"></span></label>
                                    @Html.DropDownList("WardInfoId", null, String.Empty, new { @class = "selectize validationCustom03" })
                                    <div class="invalid-feedback">
                                        ওয়ার্ড দেয়া বাধ্যতামূলক!
                                    </div>
                                </div>
                                <div class="col-md-4 mb-3">
                                    <label for="VillageInfoId">@Html.DisplayNameFor(model => model.VillageInfoId) <span class="required"></span></label>
                                    <select name="VillageInfoId" id="VillageInfoId" class="form-control validationCustom03" required>
                                        <option value="">Select...</option>
                                    </select>
                                    <div class="invalid-feedback">
                                        গ্রাম দেয়া বাধ্যতামূলক!
                                    </div>
                                </div>
                                <div class="col-md-4 mb-3">
                                    <label for="validationCustom03">@Html.DisplayNameFor(model => model.HoldingNo) <span class="required"></span></label>
                                    @Html.TextBoxFor(m => m.HoldingNo, new { @id = "validationCustom03", @class = "form-control", @placeholder = "হোল্ডিং নং", @maxLength = "250", @required = "required" })
                                    <div class="invalid-feedback">
                                        হোল্ডিং নং দেয়া বাধ্যতামূলক!
                                    </div>
                                </div>
                                <div class="col-md-4 mb-3">
                                    <label for="validationCustom03">@Html.DisplayNameFor(model => model.YearlyIncome) <span class="required"></span></label>
                                    @Html.TextBoxFor(m => m.YearlyIncome, new { @id = "validationCustom03", @class = "form-control bangla", type = "number", @placeholder = "বাৎসরিক গড় আয়", @required = "required" })
                                    <div class="invalid-feedback">
                                        বাৎসরিক গড় আয় দেয়া বাধ্যতামূলক!
                                    </div>
                                </div>


                                <div class="col-md-4 mb-3">
                                    <label for="validationCustom03">@Html.DisplayNameFor(model => model.OwnerNameInBangla) <span class="required"></span></label>
                                    @Html.TextBoxFor(m => m.OwnerNameInBangla, new { @id = "validationCustom03", @class = "form-control bangla", @placeholder = "নাম (বাংলা)", @maxLength = "250", @required = "required" })
                                    <div class="invalid-feedback">
                                        খানা প্রধানের নাম দেয়া বাধ্যতামূলক!
                                    </div>
                                </div>

                                <div class="col-md-4 mb-3">
                                    <label for="validationCustom03">@Html.DisplayNameFor(model => model.OwnerNameInEnglish) <span class="required"></span></label>
                                    @Html.TextBoxFor(m => m.OwnerNameInEnglish, new { @id = "validationCustom03", @class = "form-control", @placeholder = "নাম (ইংরেজিতে)", @maxLength = "250", @required = "required" })
                                    <div class="invalid-feedback">
                                        নাম (ইংরেজিতে) দেয়া বাধ্যতামূলক!
                                    </div>
                                </div>

                                <div class="col-md-4 mb-3">
                                    <label for="validationCustom03">@Html.DisplayNameFor(model => model.EducationInfoId)</label>
                                    @Html.DropDownList("EducationInfoId", null, String.Empty, new { @class = "selectize ddlErrorMsg validationCustom03" })
                                    <div class="invalid-feedback">
                                        শিক্ষাগত যোগ্যতা দেয়া বাধ্যতামূলক!
                                    </div>
                                </div>

                                <div class="col-md-4 mb-3">
                                    <label for="validationCustom03">@Html.DisplayNameFor(model => model.MobileNo) <span class="required"></span></label>
                                    @Html.TextBoxFor(m => m.MobileNo, new { @id = "validationCustom03", @class = "form-control bangla", type = "number", @placeholder = "মোবাইল নাম্বার", @required = "required" })
                                    <div class="invalid-feedback">
                                        মোবাইল নাম্বার দেয়া বাধ্যতামূলক!
                                    </div>
                                </div>
                                <div class="col-md-4 mb-3">
                                    <label for="validationCustom03">@Html.DisplayNameFor(model => model.FatherHusbandName)</label>
                                    @Html.TextBoxFor(m => m.FatherHusbandName, new { @id = "validationCustom03", @class = "form-control bangla", @placeholder = "পিতা/স্বামীর নাম" })
                                    <div class="invalid-feedback">
                                        পিতা/স্বামীর নাম দেয়া বাধ্যতামূলক!
                                    </div>
                                </div>
                                <div class="col-md-4 mb-3">
                                    <label for="validationCustom03">@Html.DisplayNameFor(model => model.MotherName)</label>
                                    @Html.TextBoxFor(m => m.MotherName, new { @id = "validationCustom03", @class = "form-control bangla", @placeholder = "মাতার নাম" })
                                    <div class="invalid-feedback">
                                        মাতার নাম দেয়া বাধ্যতামূলক!
                                    </div>
                                </div>
                                <div class="col-md-4 mb-3">
                                    @Html.LabelFor(model => model.TotalBoys)
                                    @Html.TextBoxFor(m => m.TotalBoys, new { @class = "form-control", type = "number", @placeholder = "পরিবারের সদস্য সংখ্যা(ছেলে)" })
                                    <div class="invalid-feedback">
                                        পরিবারের সদস্য(ছেলে) সংখ্যা দেয়া বাধ্যতামূলক!
                                    </div>
                                </div>
                                <div class="col-md-4 mb-3">
                                    @Html.LabelFor(model => model.TotalGirls)
                                    @Html.TextBoxFor(m => m.TotalGirls, new { @class = "form-control", type = "number", @placeholder = "পরিবারের সদস্য সংখ্যা(মেয়ে)" })
                                    <div class="invalid-feedback">
                                        পরিবারের সদস্য(মেয়ে) সংখ্যা দেয়া বাধ্যতামূলক!
                                    </div>
                                </div>
                                <div class="col-md-4 mb-3">
                                    @Html.LabelFor(model => model.TotalMember)
                                    @Html.TextBoxFor(m => m.TotalMember, new { @class = "form-control", @placeholder = "পরিবারের সদস্য সংখ্যা", @readonly = "readonly" })
                                    <div class="invalid-feedback">
                                        পরিবারের সদস্য সংখ্যা দেয়া বাধ্যতামূলক!
                                    </div>
                                </div>
                                <div class="col-md-4 mb-3">
                                    <label for="validationCustom03">@Html.DisplayNameFor(model => model.DateOfBirth) <span class="required"></span></label>
                                    @if (Model != null)
                                    {
                                        @Html.TextBoxFor(model => model.DateOfBirth, Model.DateOfBirth.ToString(dateFormat), new { @class = "datepickerUI form-control", @type = "text", @required = "required", @data_range = "false" })
                                    }
                                    else
                                    {

                                        @Html.TextBoxFor(model => model.DateOfBirth, "", new { @class = "datepickerUI form-control", @type = "text", @required = "required", @data_range = "false" })
                                    }
                                    <div class="invalid-feedback">
                                        জন্ম তারিখ দেয়া বাধ্যতামূলক!
                                    </div>
                                </div>
                                <div class="col-md-4 mb-3">
                                    <label for="validationCustom03">@Html.DisplayNameFor(model => model.BirthRegistrationNumber)</label>
                                    @Html.TextBoxFor(m => m.BirthRegistrationNumber, new { @id = "validationCustom03", @class = "form-control", @placeholder = "জন্ম নিবন্ধন নাম্বার" })
                                    <div class="invalid-feedback">
                                        জন্ম নিবন্ধন নাম্বার দেয়া বাধ্যতামূলক!
                                    </div>
                                </div>
                                <div class="col-md-4 mb-3">
                                    <label for="validationCustom03">@Html.DisplayNameFor(model => model.NIDNumber) <span class="required"></span></label>
                                    @Html.TextBoxFor(m => m.NIDNumber, new { @id = "validationCustom03", @class = "form-control", type = "number", @placeholder = "এনআইডি নাম্বার", @required = "required" })
                                    <div class="invalid-feedback">
                                        এনআইডি নাম্বার দেয়া বাধ্যতামূলক!
                                    </div>
                                </div>
                                <div class="col-md-4 mb-3">
                                    <label for="validationCustom03">@Html.DisplayNameFor(model => model.ReligionId) <span class="required"></span></label><br />
                                    @Html.DropDownList("ReligionId", null, String.Empty, new { @class = "selectize" })
                                    <div class="invalid-feedback">
                                        খানা প্রধানের ধর্ম দেয়া বাধ্যতামূলক!
                                    </div>
                                </div>
                                <div class="col-md-4 mb-3">
                                    <label for="validationCustom03">@Html.DisplayNameFor(model => model.GenderId) <span class="required"></span></label><br />
                                    @Html.DropDownList("GenderId", null, String.Empty, new { @class = "selectize" })
                                    <div class="invalid-feedback">
                                        খানা প্রধানের লিঙ্গ দেয়া বাধ্যতামূলক!
                                    </div>
                                </div>
                                <div class="col-md-4 mb-3">
                                    <label for="validationCustom03">@Html.DisplayNameFor(model => model.ProfessionId)</label>
                                    @Html.DropDownList("ProfessionId", null, String.Empty, new { @class = "selectize ddlErrorMsg validationCustom03" })
                                    <div class="invalid-feedback">
                                        পেশা দেয়া বাধ্যতামূলক!
                                    </div>
                                </div>
                                <div class="col-md-4 mb-3">
                                    <label for="validationCustom03">@Html.DisplayNameFor(model => model.IsTubeWell) <span class="required"></span></label><br />
                                    @Html.DropDownList("IsTubeWell", null, String.Empty, new { @class = "selectize" })
                                    <div class="invalid-feedback">
                                        নলকূপ আছে কিনা দেয়া বাধ্যতামূলক!
                                    </div>
                                </div>
                                <div class="col-md-4 mb-3">
                                    <label for="validationCustom03">@Html.DisplayNameFor(model => model.Sanitary) <span class="required"></span></label><br />
                                    @Html.DropDownList("Sanitary", null, String.Empty, new { @class = "selectize" })
                                    <div class="invalid-feedback">
                                        স্যানিটারি আছে কিনা দেয়া বাধ্যতামূলক!
                                    </div>
                                </div>
                                <div class="col-md-4 mb-3">
                                    <label for="validationCustom03">@Html.DisplayNameFor(model => model.SocialBenefitBeforeId)</label>
                                    @Html.DropDownList("SocialBenefitBeforeId", null, String.Empty, new { @class = "selectize ddlErrorMsg validationCustom03" })
                                    <div class="invalid-feedback">
                                        সামাজিক সুরক্ষা সুবিধা দেয়া বাধ্যতামূলক!
                                    </div>
                                </div>
                                <div class="col-md-4 mb-3">
                                    <label for="validationCustom03">@Html.DisplayNameFor(model => model.SocialBenefitEligibleId)</label>
                                    @Html.DropDownList("SocialBenefitEligibleId", null, String.Empty, new { @class = "selectize ddlErrorMsg validationCustom03" })
                                    <div class="invalid-feedback">
                                        সামাজিক সুরক্ষা সুবিধা দেয়া বাধ্যতামূলক!
                                    </div>
                                </div>

                                <div class="col-md-4 mb-3">
                                    <label for="validationCustom03">@Html.DisplayNameFor(model => model.SocialBenefitRunningId)</label>
                                    @Html.DropDownList("SocialBenefitRunningId", null, String.Empty, new { @class = "selectize ddlErrorMsg validationCustom03" })
                                    <div class="invalid-feedback">
                                        সামাজিক সুরক্ষা সুবিধা দেয়া বাধ্যতামূলক!
                                    </div>
                                </div>

                                <div class="col-md-4 mb-3 inline">
                                    <label for="validationCustom03" class="col-md-12">অবকাঠামো ধরণ<span class="required"></span></label>
                                    @Html.TextBoxFor(m => m.TotalBuildingHouse, new { @class = "form-control col-md-4 mb-1", type = "number", @placeholder = "পাকা ঘর" })
                                    @Html.TextBoxFor(m => m.TotalSemiBuildingHouse, new { @class = "form-control col-md-4 mb-1", type = "number", @placeholder = "আধা-পাকা ঘর" })
                                    @Html.TextBoxFor(m => m.TotalRawHouse, new { @class = "form-control col-md-3 mb-1", type = "number", @placeholder = "কাঁচা ঘর" })
                                </div>
                                <div class="col-md-4 mb-3">
                                    @Html.LabelFor(model => model.YearlyRentAmount)
                                    @Html.HiddenFor(a => a.YearlyRentAmount)
                                    @Html.TextBox("YearlyRentAmountDisplay", "", new { @class = "form-control", @placeholder = "বাৎসরিক ভাড়া", disabled = "disabled", @readonly = "readonly" })
                                    <div class="invalid-feedback">
                                        বাৎসরিক ভাড়া দেয়া বাধ্যতামূলক!
                                    </div>
                                </div>
                                <div class="col-md-4 mb-3">
                                    @Html.LabelFor(model => model.YearlyInterestRate)
                                    @Html.HiddenFor(a => a.YearlyInterestRate)
                                    @Html.TextBox("YearlyInterestDisplay", "", new { @class = "form-control", @placeholder = "ঋনের বার্ষিক সুদ", disabled = "disabled", @readonly = "readonly" })
                                    <div class="invalid-feedback">
                                        ঋনের বার্ষিক সুদ দেয়া বাধ্যতামূলক!
                                    </div>
                                </div>
                                <div class="col-md-4 mb-3">
                                    <label for="validationCustom03">@Html.DisplayNameFor(model => model.LivingType) <span class="required"></span></label><br />
                                    @Html.DropDownList("LivingType", null, String.Empty, new { @class = "selectize" })
                                    <div class="invalid-feedback">
                                        বসবাসের ধরণ দেয়া বাধ্যতামূলক!
                                    </div>
                                </div>
                                <div class="col-md-4 mb-3">
                                    <label for="validationCustom03">@Html.DisplayNameFor(model => model.PreviousDueAmount)</label>
                                    @Html.TextBoxFor(m => m.PreviousDueAmount, new { @id = "validationCustom03", @class = "form-control", type = "number", @placeholder = "পূর্বের বকেয়া" })
                                    <div class="invalid-feedback">
                                        পূর্বের বকেয়া দেয়া বাধ্যতামূলক!
                                    </div>
                                </div>
                            </div>
                            <button class="btn btn-primary" type="submit">সংরক্ষণ করুন</button>
                        }
                    </div>
                </div>
            </div>
        </div>
        <!-- end row -->
    </div>
    <!-- container-fluid -->
</div>

@section Scripts {

    <script type="text/javascript">
        $(document).ready(function () {
            $("#TotalBoys").change(function () {
                setTotalmembers();
            });
            $("#TotalGirls").change(function () {
                setTotalmembers();
            });

            $("#WardInfoId").change(function () {
                GetVillageDropdown();
            });

            $("#TotalBuildingHouse").blur(function () {
                GetRentInterestRate();
            });
            $("#TotalSemiBuildingHouse").blur(function () {
                GetRentInterestRate();
            });
            $("#TotalRawHouse").blur(function () {
                GetRentInterestRate();
            });

            function setTotalmembers() {
                var boy = parseInt($("#TotalBoys").val()) || 0;
                var girl = parseInt($("#TotalGirls").val()) || 0;
                debugger;
                $("#TotalMember").val(boy + girl)
            }

            function GetRentInterestRate() {
                var building = $("#TotalBuildingHouse").val();
                var semiBuilding = $("#TotalSemiBuildingHouse").val();
                var rawHouse = $("#TotalRawHouse").val();

                  $.ajax({
                        url: '@Url.Action("Rent_Interest", "InfraStructuralType")',
                        dataType: "json",
                        type: "GET",
                        cache: false,
                        data: { building, semiBuilding, rawHouse},
                        success: function (data) {
                            $("#YearlyRentAmount").val(data.rent);
                            $("#YearlyRentAmountDisplay").val(data.rent);

                            $("#YearlyInterestRate").val(data.rate);
                            $("#YearlyInterestDisplay").val(data.rate);
                        },
                        error: function (xhr) {
                            alert(xhr.responseText);
                        }
                 });
            }

            function GetVillageDropdown() {
                var wardId = $("#WardInfoId").val();
                $("#VillageInfoId").empty();
                //$('#VillageInfoId').append(new Option('Select...', ''));
                debugger;

                  $.ajax({
                        url: '@Url.Action("GetVillage", "VillageInfo")',
                        dataType: "json",
                        type: "GET",
                        cache: false,
                        data: { wardId},
                      success: function (data) {

                          debugger;
                          var count = 0;
                          data.forEach(function (item) {
                              $('#VillageInfoId').append(new Option(item.Name, item.Id));
                          });
                        },
                        error: function (xhr) {
                            alert(xhr.responseText);
                        }
                 });
            }
        });
    </script>
}
