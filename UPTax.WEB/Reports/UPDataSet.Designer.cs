//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace UPTax.Reports {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("UPDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class UPDataSet : global::System.Data.DataSet {
        
        private SingleHoldingTaxDataTable tableSingleHoldingTax;
        
        private TaxReceiptDataTable tableTaxReceipt;
        
        private TaxInfoByVillOrWordDataTable tableTaxInfoByVillOrWord;
        
        private TopSheetTblDataTable tableTopSheetTbl;
        
        private DailyPostingDataTable tableDailyPosting;
        
        private TranDataTable tableTran;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UPDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected UPDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["SingleHoldingTax"] != null)) {
                    base.Tables.Add(new SingleHoldingTaxDataTable(ds.Tables["SingleHoldingTax"]));
                }
                if ((ds.Tables["TaxReceipt"] != null)) {
                    base.Tables.Add(new TaxReceiptDataTable(ds.Tables["TaxReceipt"]));
                }
                if ((ds.Tables["TaxInfoByVillOrWord"] != null)) {
                    base.Tables.Add(new TaxInfoByVillOrWordDataTable(ds.Tables["TaxInfoByVillOrWord"]));
                }
                if ((ds.Tables["TopSheetTbl"] != null)) {
                    base.Tables.Add(new TopSheetTblDataTable(ds.Tables["TopSheetTbl"]));
                }
                if ((ds.Tables["DailyPosting"] != null)) {
                    base.Tables.Add(new DailyPostingDataTable(ds.Tables["DailyPosting"]));
                }
                if ((ds.Tables["Tran"] != null)) {
                    base.Tables.Add(new TranDataTable(ds.Tables["Tran"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SingleHoldingTaxDataTable SingleHoldingTax {
            get {
                return this.tableSingleHoldingTax;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TaxReceiptDataTable TaxReceipt {
            get {
                return this.tableTaxReceipt;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TaxInfoByVillOrWordDataTable TaxInfoByVillOrWord {
            get {
                return this.tableTaxInfoByVillOrWord;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TopSheetTblDataTable TopSheetTbl {
            get {
                return this.tableTopSheetTbl;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DailyPostingDataTable DailyPosting {
            get {
                return this.tableDailyPosting;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TranDataTable Tran {
            get {
                return this.tableTran;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            UPDataSet cln = ((UPDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["SingleHoldingTax"] != null)) {
                    base.Tables.Add(new SingleHoldingTaxDataTable(ds.Tables["SingleHoldingTax"]));
                }
                if ((ds.Tables["TaxReceipt"] != null)) {
                    base.Tables.Add(new TaxReceiptDataTable(ds.Tables["TaxReceipt"]));
                }
                if ((ds.Tables["TaxInfoByVillOrWord"] != null)) {
                    base.Tables.Add(new TaxInfoByVillOrWordDataTable(ds.Tables["TaxInfoByVillOrWord"]));
                }
                if ((ds.Tables["TopSheetTbl"] != null)) {
                    base.Tables.Add(new TopSheetTblDataTable(ds.Tables["TopSheetTbl"]));
                }
                if ((ds.Tables["DailyPosting"] != null)) {
                    base.Tables.Add(new DailyPostingDataTable(ds.Tables["DailyPosting"]));
                }
                if ((ds.Tables["Tran"] != null)) {
                    base.Tables.Add(new TranDataTable(ds.Tables["Tran"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableSingleHoldingTax = ((SingleHoldingTaxDataTable)(base.Tables["SingleHoldingTax"]));
            if ((initTable == true)) {
                if ((this.tableSingleHoldingTax != null)) {
                    this.tableSingleHoldingTax.InitVars();
                }
            }
            this.tableTaxReceipt = ((TaxReceiptDataTable)(base.Tables["TaxReceipt"]));
            if ((initTable == true)) {
                if ((this.tableTaxReceipt != null)) {
                    this.tableTaxReceipt.InitVars();
                }
            }
            this.tableTaxInfoByVillOrWord = ((TaxInfoByVillOrWordDataTable)(base.Tables["TaxInfoByVillOrWord"]));
            if ((initTable == true)) {
                if ((this.tableTaxInfoByVillOrWord != null)) {
                    this.tableTaxInfoByVillOrWord.InitVars();
                }
            }
            this.tableTopSheetTbl = ((TopSheetTblDataTable)(base.Tables["TopSheetTbl"]));
            if ((initTable == true)) {
                if ((this.tableTopSheetTbl != null)) {
                    this.tableTopSheetTbl.InitVars();
                }
            }
            this.tableDailyPosting = ((DailyPostingDataTable)(base.Tables["DailyPosting"]));
            if ((initTable == true)) {
                if ((this.tableDailyPosting != null)) {
                    this.tableDailyPosting.InitVars();
                }
            }
            this.tableTran = ((TranDataTable)(base.Tables["Tran"]));
            if ((initTable == true)) {
                if ((this.tableTran != null)) {
                    this.tableTran.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "UPDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/UPDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableSingleHoldingTax = new SingleHoldingTaxDataTable();
            base.Tables.Add(this.tableSingleHoldingTax);
            this.tableTaxReceipt = new TaxReceiptDataTable();
            base.Tables.Add(this.tableTaxReceipt);
            this.tableTaxInfoByVillOrWord = new TaxInfoByVillOrWordDataTable();
            base.Tables.Add(this.tableTaxInfoByVillOrWord);
            this.tableTopSheetTbl = new TopSheetTblDataTable();
            base.Tables.Add(this.tableTopSheetTbl);
            this.tableDailyPosting = new DailyPostingDataTable();
            base.Tables.Add(this.tableDailyPosting);
            this.tableTran = new TranDataTable();
            base.Tables.Add(this.tableTran);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeSingleHoldingTax() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeTaxReceipt() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeTaxInfoByVillOrWord() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeTopSheetTbl() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeDailyPosting() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeTran() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            UPDataSet ds = new UPDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void SingleHoldingTaxRowChangeEventHandler(object sender, SingleHoldingTaxRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void TaxReceiptRowChangeEventHandler(object sender, TaxReceiptRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void TaxInfoByVillOrWordRowChangeEventHandler(object sender, TaxInfoByVillOrWordRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void TopSheetTblRowChangeEventHandler(object sender, TopSheetTblRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void DailyPostingRowChangeEventHandler(object sender, DailyPostingRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void TranRowChangeEventHandler(object sender, TranRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SingleHoldingTaxDataTable : global::System.Data.TypedTableBase<SingleHoldingTaxRow> {
            
            private global::System.Data.DataColumn columnHoldingNo;
            
            private global::System.Data.DataColumn columnOwnerName;
            
            private global::System.Data.DataColumn columnWardNo;
            
            private global::System.Data.DataColumn columnParentName;
            
            private global::System.Data.DataColumn columnMobileNo;
            
            private global::System.Data.DataColumn columnBillAddress;
            
            private global::System.Data.DataColumn columnPaymentDate;
            
            private global::System.Data.DataColumn columnCurrentAmount;
            
            private global::System.Data.DataColumn columnCurrentDueAmount;
            
            private global::System.Data.DataColumn columnPrevDueAmount;
            
            private global::System.Data.DataColumn columnPrevAmount;
            
            private global::System.Data.DataColumn columnPenaltyDueAmount;
            
            private global::System.Data.DataColumn columnPenaltyAmount;
            
            private global::System.Data.DataColumn columnCurrentTotalAmount;
            
            private global::System.Data.DataColumn columnPrevTotalAmount;
            
            private global::System.Data.DataColumn columnPenaltyTotalAmount;
            
            private global::System.Data.DataColumn columnGrandTotalAmount;
            
            private global::System.Data.DataColumn columnCurrentAmountStr;
            
            private global::System.Data.DataColumn columnCurrentDueAmountStr;
            
            private global::System.Data.DataColumn columnPrevDueAmountStr;
            
            private global::System.Data.DataColumn columnPenaltyDueAmountStr;
            
            private global::System.Data.DataColumn columnPenaltyAmountStr;
            
            private global::System.Data.DataColumn columnCurrentTotalAmountStr;
            
            private global::System.Data.DataColumn columnPenaltyTotalAmountStr;
            
            private global::System.Data.DataColumn columnGrandTotalAmountStr;
            
            private global::System.Data.DataColumn columnHoldingTotalStr;
            
            private global::System.Data.DataColumn columnPrevTotalStr;
            
            private global::System.Data.DataColumn columnTotalPenaltyStr;
            
            private global::System.Data.DataColumn columnPrevAmountStr;
            
            private global::System.Data.DataColumn columnLastPaymentDateStr;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SingleHoldingTaxDataTable() {
                this.TableName = "SingleHoldingTax";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SingleHoldingTaxDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected SingleHoldingTaxDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HoldingNoColumn {
                get {
                    return this.columnHoldingNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OwnerNameColumn {
                get {
                    return this.columnOwnerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WardNoColumn {
                get {
                    return this.columnWardNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ParentNameColumn {
                get {
                    return this.columnParentName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MobileNoColumn {
                get {
                    return this.columnMobileNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BillAddressColumn {
                get {
                    return this.columnBillAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PaymentDateColumn {
                get {
                    return this.columnPaymentDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CurrentAmountColumn {
                get {
                    return this.columnCurrentAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CurrentDueAmountColumn {
                get {
                    return this.columnCurrentDueAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PrevDueAmountColumn {
                get {
                    return this.columnPrevDueAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PrevAmountColumn {
                get {
                    return this.columnPrevAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PenaltyDueAmountColumn {
                get {
                    return this.columnPenaltyDueAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PenaltyAmountColumn {
                get {
                    return this.columnPenaltyAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CurrentTotalAmountColumn {
                get {
                    return this.columnCurrentTotalAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PrevTotalAmountColumn {
                get {
                    return this.columnPrevTotalAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PenaltyTotalAmountColumn {
                get {
                    return this.columnPenaltyTotalAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GrandTotalAmountColumn {
                get {
                    return this.columnGrandTotalAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CurrentAmountStrColumn {
                get {
                    return this.columnCurrentAmountStr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CurrentDueAmountStrColumn {
                get {
                    return this.columnCurrentDueAmountStr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PrevDueAmountStrColumn {
                get {
                    return this.columnPrevDueAmountStr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PenaltyDueAmountStrColumn {
                get {
                    return this.columnPenaltyDueAmountStr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PenaltyAmountStrColumn {
                get {
                    return this.columnPenaltyAmountStr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CurrentTotalAmountStrColumn {
                get {
                    return this.columnCurrentTotalAmountStr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PenaltyTotalAmountStrColumn {
                get {
                    return this.columnPenaltyTotalAmountStr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GrandTotalAmountStrColumn {
                get {
                    return this.columnGrandTotalAmountStr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HoldingTotalStrColumn {
                get {
                    return this.columnHoldingTotalStr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PrevTotalStrColumn {
                get {
                    return this.columnPrevTotalStr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalPenaltyStrColumn {
                get {
                    return this.columnTotalPenaltyStr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PrevAmountStrColumn {
                get {
                    return this.columnPrevAmountStr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LastPaymentDateStrColumn {
                get {
                    return this.columnLastPaymentDateStr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SingleHoldingTaxRow this[int index] {
                get {
                    return ((SingleHoldingTaxRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SingleHoldingTaxRowChangeEventHandler SingleHoldingTaxRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SingleHoldingTaxRowChangeEventHandler SingleHoldingTaxRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SingleHoldingTaxRowChangeEventHandler SingleHoldingTaxRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SingleHoldingTaxRowChangeEventHandler SingleHoldingTaxRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddSingleHoldingTaxRow(SingleHoldingTaxRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SingleHoldingTaxRow AddSingleHoldingTaxRow(
                        string HoldingNo, 
                        string OwnerName, 
                        string WardNo, 
                        string ParentName, 
                        string MobileNo, 
                        string BillAddress, 
                        string PaymentDate, 
                        string CurrentAmount, 
                        string CurrentDueAmount, 
                        string PrevDueAmount, 
                        string PrevAmount, 
                        string PenaltyDueAmount, 
                        string PenaltyAmount, 
                        string CurrentTotalAmount, 
                        string PrevTotalAmount, 
                        string PenaltyTotalAmount, 
                        string GrandTotalAmount, 
                        string CurrentAmountStr, 
                        string CurrentDueAmountStr, 
                        string PrevDueAmountStr, 
                        string PenaltyDueAmountStr, 
                        string PenaltyAmountStr, 
                        string CurrentTotalAmountStr, 
                        string PenaltyTotalAmountStr, 
                        string GrandTotalAmountStr, 
                        string HoldingTotalStr, 
                        string PrevTotalStr, 
                        string TotalPenaltyStr, 
                        string PrevAmountStr, 
                        string LastPaymentDateStr) {
                SingleHoldingTaxRow rowSingleHoldingTaxRow = ((SingleHoldingTaxRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        HoldingNo,
                        OwnerName,
                        WardNo,
                        ParentName,
                        MobileNo,
                        BillAddress,
                        PaymentDate,
                        CurrentAmount,
                        CurrentDueAmount,
                        PrevDueAmount,
                        PrevAmount,
                        PenaltyDueAmount,
                        PenaltyAmount,
                        CurrentTotalAmount,
                        PrevTotalAmount,
                        PenaltyTotalAmount,
                        GrandTotalAmount,
                        CurrentAmountStr,
                        CurrentDueAmountStr,
                        PrevDueAmountStr,
                        PenaltyDueAmountStr,
                        PenaltyAmountStr,
                        CurrentTotalAmountStr,
                        PenaltyTotalAmountStr,
                        GrandTotalAmountStr,
                        HoldingTotalStr,
                        PrevTotalStr,
                        TotalPenaltyStr,
                        PrevAmountStr,
                        LastPaymentDateStr};
                rowSingleHoldingTaxRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSingleHoldingTaxRow);
                return rowSingleHoldingTaxRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SingleHoldingTaxDataTable cln = ((SingleHoldingTaxDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SingleHoldingTaxDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnHoldingNo = base.Columns["HoldingNo"];
                this.columnOwnerName = base.Columns["OwnerName"];
                this.columnWardNo = base.Columns["WardNo"];
                this.columnParentName = base.Columns["ParentName"];
                this.columnMobileNo = base.Columns["MobileNo"];
                this.columnBillAddress = base.Columns["BillAddress"];
                this.columnPaymentDate = base.Columns["PaymentDate"];
                this.columnCurrentAmount = base.Columns["CurrentAmount"];
                this.columnCurrentDueAmount = base.Columns["CurrentDueAmount"];
                this.columnPrevDueAmount = base.Columns["PrevDueAmount"];
                this.columnPrevAmount = base.Columns["PrevAmount"];
                this.columnPenaltyDueAmount = base.Columns["PenaltyDueAmount"];
                this.columnPenaltyAmount = base.Columns["PenaltyAmount"];
                this.columnCurrentTotalAmount = base.Columns["CurrentTotalAmount"];
                this.columnPrevTotalAmount = base.Columns["PrevTotalAmount"];
                this.columnPenaltyTotalAmount = base.Columns["PenaltyTotalAmount"];
                this.columnGrandTotalAmount = base.Columns["GrandTotalAmount"];
                this.columnCurrentAmountStr = base.Columns["CurrentAmountStr"];
                this.columnCurrentDueAmountStr = base.Columns["CurrentDueAmountStr"];
                this.columnPrevDueAmountStr = base.Columns["PrevDueAmountStr"];
                this.columnPenaltyDueAmountStr = base.Columns["PenaltyDueAmountStr"];
                this.columnPenaltyAmountStr = base.Columns["PenaltyAmountStr"];
                this.columnCurrentTotalAmountStr = base.Columns["CurrentTotalAmountStr"];
                this.columnPenaltyTotalAmountStr = base.Columns["PenaltyTotalAmountStr"];
                this.columnGrandTotalAmountStr = base.Columns["GrandTotalAmountStr"];
                this.columnHoldingTotalStr = base.Columns["HoldingTotalStr"];
                this.columnPrevTotalStr = base.Columns["PrevTotalStr"];
                this.columnTotalPenaltyStr = base.Columns["TotalPenaltyStr"];
                this.columnPrevAmountStr = base.Columns["PrevAmountStr"];
                this.columnLastPaymentDateStr = base.Columns["LastPaymentDateStr"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnHoldingNo = new global::System.Data.DataColumn("HoldingNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHoldingNo);
                this.columnOwnerName = new global::System.Data.DataColumn("OwnerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOwnerName);
                this.columnWardNo = new global::System.Data.DataColumn("WardNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWardNo);
                this.columnParentName = new global::System.Data.DataColumn("ParentName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParentName);
                this.columnMobileNo = new global::System.Data.DataColumn("MobileNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMobileNo);
                this.columnBillAddress = new global::System.Data.DataColumn("BillAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBillAddress);
                this.columnPaymentDate = new global::System.Data.DataColumn("PaymentDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaymentDate);
                this.columnCurrentAmount = new global::System.Data.DataColumn("CurrentAmount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrentAmount);
                this.columnCurrentDueAmount = new global::System.Data.DataColumn("CurrentDueAmount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrentDueAmount);
                this.columnPrevDueAmount = new global::System.Data.DataColumn("PrevDueAmount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrevDueAmount);
                this.columnPrevAmount = new global::System.Data.DataColumn("PrevAmount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrevAmount);
                this.columnPenaltyDueAmount = new global::System.Data.DataColumn("PenaltyDueAmount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPenaltyDueAmount);
                this.columnPenaltyAmount = new global::System.Data.DataColumn("PenaltyAmount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPenaltyAmount);
                this.columnCurrentTotalAmount = new global::System.Data.DataColumn("CurrentTotalAmount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrentTotalAmount);
                this.columnPrevTotalAmount = new global::System.Data.DataColumn("PrevTotalAmount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrevTotalAmount);
                this.columnPenaltyTotalAmount = new global::System.Data.DataColumn("PenaltyTotalAmount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPenaltyTotalAmount);
                this.columnGrandTotalAmount = new global::System.Data.DataColumn("GrandTotalAmount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrandTotalAmount);
                this.columnCurrentAmountStr = new global::System.Data.DataColumn("CurrentAmountStr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrentAmountStr);
                this.columnCurrentDueAmountStr = new global::System.Data.DataColumn("CurrentDueAmountStr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrentDueAmountStr);
                this.columnPrevDueAmountStr = new global::System.Data.DataColumn("PrevDueAmountStr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrevDueAmountStr);
                this.columnPenaltyDueAmountStr = new global::System.Data.DataColumn("PenaltyDueAmountStr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPenaltyDueAmountStr);
                this.columnPenaltyAmountStr = new global::System.Data.DataColumn("PenaltyAmountStr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPenaltyAmountStr);
                this.columnCurrentTotalAmountStr = new global::System.Data.DataColumn("CurrentTotalAmountStr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrentTotalAmountStr);
                this.columnPenaltyTotalAmountStr = new global::System.Data.DataColumn("PenaltyTotalAmountStr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPenaltyTotalAmountStr);
                this.columnGrandTotalAmountStr = new global::System.Data.DataColumn("GrandTotalAmountStr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrandTotalAmountStr);
                this.columnHoldingTotalStr = new global::System.Data.DataColumn("HoldingTotalStr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHoldingTotalStr);
                this.columnPrevTotalStr = new global::System.Data.DataColumn("PrevTotalStr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrevTotalStr);
                this.columnTotalPenaltyStr = new global::System.Data.DataColumn("TotalPenaltyStr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalPenaltyStr);
                this.columnPrevAmountStr = new global::System.Data.DataColumn("PrevAmountStr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrevAmountStr);
                this.columnLastPaymentDateStr = new global::System.Data.DataColumn("LastPaymentDateStr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastPaymentDateStr);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SingleHoldingTaxRow NewSingleHoldingTaxRow() {
                return ((SingleHoldingTaxRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SingleHoldingTaxRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SingleHoldingTaxRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SingleHoldingTaxRowChanged != null)) {
                    this.SingleHoldingTaxRowChanged(this, new SingleHoldingTaxRowChangeEvent(((SingleHoldingTaxRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SingleHoldingTaxRowChanging != null)) {
                    this.SingleHoldingTaxRowChanging(this, new SingleHoldingTaxRowChangeEvent(((SingleHoldingTaxRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SingleHoldingTaxRowDeleted != null)) {
                    this.SingleHoldingTaxRowDeleted(this, new SingleHoldingTaxRowChangeEvent(((SingleHoldingTaxRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SingleHoldingTaxRowDeleting != null)) {
                    this.SingleHoldingTaxRowDeleting(this, new SingleHoldingTaxRowChangeEvent(((SingleHoldingTaxRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveSingleHoldingTaxRow(SingleHoldingTaxRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                UPDataSet ds = new UPDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SingleHoldingTaxDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TaxReceiptDataTable : global::System.Data.TypedTableBase<TaxReceiptRow> {
            
            private global::System.Data.DataColumn columnHoldingNo;
            
            private global::System.Data.DataColumn columnOwnerNameInBangla;
            
            private global::System.Data.DataColumn columnFatherHusbandName;
            
            private global::System.Data.DataColumn columnMobileNo;
            
            private global::System.Data.DataColumn columnWardNo;
            
            private global::System.Data.DataColumn columnTaxAmount;
            
            private global::System.Data.DataColumn columnDueAmount;
            
            private global::System.Data.DataColumn columnTaxPaymentDate;
            
            private global::System.Data.DataColumn columnYearName;
            
            private global::System.Data.DataColumn columnTotalCollection;
            
            private global::System.Data.DataColumn columnVillageName;
            
            private global::System.Data.DataColumn columnTaxAmountStr;
            
            private global::System.Data.DataColumn columnDueAmountStr;
            
            private global::System.Data.DataColumn columnTaxPaymentDateStr;
            
            private global::System.Data.DataColumn columnTotalCollectionStr;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TaxReceiptDataTable() {
                this.TableName = "TaxReceipt";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TaxReceiptDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected TaxReceiptDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HoldingNoColumn {
                get {
                    return this.columnHoldingNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OwnerNameInBanglaColumn {
                get {
                    return this.columnOwnerNameInBangla;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FatherHusbandNameColumn {
                get {
                    return this.columnFatherHusbandName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MobileNoColumn {
                get {
                    return this.columnMobileNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WardNoColumn {
                get {
                    return this.columnWardNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TaxAmountColumn {
                get {
                    return this.columnTaxAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DueAmountColumn {
                get {
                    return this.columnDueAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TaxPaymentDateColumn {
                get {
                    return this.columnTaxPaymentDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn YearNameColumn {
                get {
                    return this.columnYearName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalCollectionColumn {
                get {
                    return this.columnTotalCollection;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VillageNameColumn {
                get {
                    return this.columnVillageName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TaxAmountStrColumn {
                get {
                    return this.columnTaxAmountStr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DueAmountStrColumn {
                get {
                    return this.columnDueAmountStr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TaxPaymentDateStrColumn {
                get {
                    return this.columnTaxPaymentDateStr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalCollectionStrColumn {
                get {
                    return this.columnTotalCollectionStr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TaxReceiptRow this[int index] {
                get {
                    return ((TaxReceiptRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TaxReceiptRowChangeEventHandler TaxReceiptRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TaxReceiptRowChangeEventHandler TaxReceiptRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TaxReceiptRowChangeEventHandler TaxReceiptRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TaxReceiptRowChangeEventHandler TaxReceiptRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddTaxReceiptRow(TaxReceiptRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TaxReceiptRow AddTaxReceiptRow(string HoldingNo, string OwnerNameInBangla, string FatherHusbandName, string MobileNo, string WardNo, string TaxAmount, string DueAmount, string TaxPaymentDate, string YearName, string TotalCollection, string VillageName, string TaxAmountStr, string DueAmountStr, string TaxPaymentDateStr, string TotalCollectionStr) {
                TaxReceiptRow rowTaxReceiptRow = ((TaxReceiptRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        HoldingNo,
                        OwnerNameInBangla,
                        FatherHusbandName,
                        MobileNo,
                        WardNo,
                        TaxAmount,
                        DueAmount,
                        TaxPaymentDate,
                        YearName,
                        TotalCollection,
                        VillageName,
                        TaxAmountStr,
                        DueAmountStr,
                        TaxPaymentDateStr,
                        TotalCollectionStr};
                rowTaxReceiptRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTaxReceiptRow);
                return rowTaxReceiptRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                TaxReceiptDataTable cln = ((TaxReceiptDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TaxReceiptDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnHoldingNo = base.Columns["HoldingNo"];
                this.columnOwnerNameInBangla = base.Columns["OwnerNameInBangla"];
                this.columnFatherHusbandName = base.Columns["FatherHusbandName"];
                this.columnMobileNo = base.Columns["MobileNo"];
                this.columnWardNo = base.Columns["WardNo"];
                this.columnTaxAmount = base.Columns["TaxAmount"];
                this.columnDueAmount = base.Columns["DueAmount"];
                this.columnTaxPaymentDate = base.Columns["TaxPaymentDate"];
                this.columnYearName = base.Columns["YearName"];
                this.columnTotalCollection = base.Columns["TotalCollection"];
                this.columnVillageName = base.Columns["VillageName"];
                this.columnTaxAmountStr = base.Columns["TaxAmountStr"];
                this.columnDueAmountStr = base.Columns["DueAmountStr"];
                this.columnTaxPaymentDateStr = base.Columns["TaxPaymentDateStr"];
                this.columnTotalCollectionStr = base.Columns["TotalCollectionStr"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnHoldingNo = new global::System.Data.DataColumn("HoldingNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHoldingNo);
                this.columnOwnerNameInBangla = new global::System.Data.DataColumn("OwnerNameInBangla", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOwnerNameInBangla);
                this.columnFatherHusbandName = new global::System.Data.DataColumn("FatherHusbandName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFatherHusbandName);
                this.columnMobileNo = new global::System.Data.DataColumn("MobileNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMobileNo);
                this.columnWardNo = new global::System.Data.DataColumn("WardNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWardNo);
                this.columnTaxAmount = new global::System.Data.DataColumn("TaxAmount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaxAmount);
                this.columnDueAmount = new global::System.Data.DataColumn("DueAmount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDueAmount);
                this.columnTaxPaymentDate = new global::System.Data.DataColumn("TaxPaymentDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaxPaymentDate);
                this.columnYearName = new global::System.Data.DataColumn("YearName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYearName);
                this.columnTotalCollection = new global::System.Data.DataColumn("TotalCollection", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalCollection);
                this.columnVillageName = new global::System.Data.DataColumn("VillageName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVillageName);
                this.columnTaxAmountStr = new global::System.Data.DataColumn("TaxAmountStr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaxAmountStr);
                this.columnDueAmountStr = new global::System.Data.DataColumn("DueAmountStr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDueAmountStr);
                this.columnTaxPaymentDateStr = new global::System.Data.DataColumn("TaxPaymentDateStr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaxPaymentDateStr);
                this.columnTotalCollectionStr = new global::System.Data.DataColumn("TotalCollectionStr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalCollectionStr);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TaxReceiptRow NewTaxReceiptRow() {
                return ((TaxReceiptRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TaxReceiptRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(TaxReceiptRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TaxReceiptRowChanged != null)) {
                    this.TaxReceiptRowChanged(this, new TaxReceiptRowChangeEvent(((TaxReceiptRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TaxReceiptRowChanging != null)) {
                    this.TaxReceiptRowChanging(this, new TaxReceiptRowChangeEvent(((TaxReceiptRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TaxReceiptRowDeleted != null)) {
                    this.TaxReceiptRowDeleted(this, new TaxReceiptRowChangeEvent(((TaxReceiptRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TaxReceiptRowDeleting != null)) {
                    this.TaxReceiptRowDeleting(this, new TaxReceiptRowChangeEvent(((TaxReceiptRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveTaxReceiptRow(TaxReceiptRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                UPDataSet ds = new UPDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TaxReceiptDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TaxInfoByVillOrWordDataTable : global::System.Data.TypedTableBase<TaxInfoByVillOrWordRow> {
            
            private global::System.Data.DataColumn columnHoldingNo;
            
            private global::System.Data.DataColumn columnOwnerName;
            
            private global::System.Data.DataColumn columnParentName;
            
            private global::System.Data.DataColumn columnMobileNo;
            
            private global::System.Data.DataColumn columnWardNo;
            
            private global::System.Data.DataColumn columnTotalBuildingHouse;
            
            private global::System.Data.DataColumn columnTotalRawHouse;
            
            private global::System.Data.DataColumn columnTotalSemiBuildingHouse;
            
            private global::System.Data.DataColumn columnYearlyRentAmount;
            
            private global::System.Data.DataColumn columnTotalTax;
            
            private global::System.Data.DataColumn columnVillageName;
            
            private global::System.Data.DataColumn columnPeviousDue;
            
            private global::System.Data.DataColumn columnComments;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TaxInfoByVillOrWordDataTable() {
                this.TableName = "TaxInfoByVillOrWord";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TaxInfoByVillOrWordDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected TaxInfoByVillOrWordDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HoldingNoColumn {
                get {
                    return this.columnHoldingNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OwnerNameColumn {
                get {
                    return this.columnOwnerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ParentNameColumn {
                get {
                    return this.columnParentName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MobileNoColumn {
                get {
                    return this.columnMobileNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WardNoColumn {
                get {
                    return this.columnWardNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalBuildingHouseColumn {
                get {
                    return this.columnTotalBuildingHouse;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalRawHouseColumn {
                get {
                    return this.columnTotalRawHouse;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalSemiBuildingHouseColumn {
                get {
                    return this.columnTotalSemiBuildingHouse;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn YearlyRentAmountColumn {
                get {
                    return this.columnYearlyRentAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalTaxColumn {
                get {
                    return this.columnTotalTax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VillageNameColumn {
                get {
                    return this.columnVillageName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PeviousDueColumn {
                get {
                    return this.columnPeviousDue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CommentsColumn {
                get {
                    return this.columnComments;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TaxInfoByVillOrWordRow this[int index] {
                get {
                    return ((TaxInfoByVillOrWordRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TaxInfoByVillOrWordRowChangeEventHandler TaxInfoByVillOrWordRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TaxInfoByVillOrWordRowChangeEventHandler TaxInfoByVillOrWordRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TaxInfoByVillOrWordRowChangeEventHandler TaxInfoByVillOrWordRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TaxInfoByVillOrWordRowChangeEventHandler TaxInfoByVillOrWordRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddTaxInfoByVillOrWordRow(TaxInfoByVillOrWordRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TaxInfoByVillOrWordRow AddTaxInfoByVillOrWordRow(string HoldingNo, string OwnerName, string ParentName, string MobileNo, string WardNo, string TotalBuildingHouse, string TotalRawHouse, string TotalSemiBuildingHouse, string YearlyRentAmount, string TotalTax, string VillageName, string PeviousDue, string Comments) {
                TaxInfoByVillOrWordRow rowTaxInfoByVillOrWordRow = ((TaxInfoByVillOrWordRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        HoldingNo,
                        OwnerName,
                        ParentName,
                        MobileNo,
                        WardNo,
                        TotalBuildingHouse,
                        TotalRawHouse,
                        TotalSemiBuildingHouse,
                        YearlyRentAmount,
                        TotalTax,
                        VillageName,
                        PeviousDue,
                        Comments};
                rowTaxInfoByVillOrWordRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTaxInfoByVillOrWordRow);
                return rowTaxInfoByVillOrWordRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                TaxInfoByVillOrWordDataTable cln = ((TaxInfoByVillOrWordDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TaxInfoByVillOrWordDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnHoldingNo = base.Columns["HoldingNo"];
                this.columnOwnerName = base.Columns["OwnerName"];
                this.columnParentName = base.Columns["ParentName"];
                this.columnMobileNo = base.Columns["MobileNo"];
                this.columnWardNo = base.Columns["WardNo"];
                this.columnTotalBuildingHouse = base.Columns["TotalBuildingHouse"];
                this.columnTotalRawHouse = base.Columns["TotalRawHouse"];
                this.columnTotalSemiBuildingHouse = base.Columns["TotalSemiBuildingHouse"];
                this.columnYearlyRentAmount = base.Columns["YearlyRentAmount"];
                this.columnTotalTax = base.Columns["TotalTax"];
                this.columnVillageName = base.Columns["VillageName"];
                this.columnPeviousDue = base.Columns["PeviousDue"];
                this.columnComments = base.Columns["Comments"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnHoldingNo = new global::System.Data.DataColumn("HoldingNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHoldingNo);
                this.columnOwnerName = new global::System.Data.DataColumn("OwnerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOwnerName);
                this.columnParentName = new global::System.Data.DataColumn("ParentName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParentName);
                this.columnMobileNo = new global::System.Data.DataColumn("MobileNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMobileNo);
                this.columnWardNo = new global::System.Data.DataColumn("WardNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWardNo);
                this.columnTotalBuildingHouse = new global::System.Data.DataColumn("TotalBuildingHouse", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalBuildingHouse);
                this.columnTotalRawHouse = new global::System.Data.DataColumn("TotalRawHouse", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalRawHouse);
                this.columnTotalSemiBuildingHouse = new global::System.Data.DataColumn("TotalSemiBuildingHouse", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalSemiBuildingHouse);
                this.columnYearlyRentAmount = new global::System.Data.DataColumn("YearlyRentAmount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYearlyRentAmount);
                this.columnTotalTax = new global::System.Data.DataColumn("TotalTax", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalTax);
                this.columnVillageName = new global::System.Data.DataColumn("VillageName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVillageName);
                this.columnPeviousDue = new global::System.Data.DataColumn("PeviousDue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPeviousDue);
                this.columnComments = new global::System.Data.DataColumn("Comments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComments);
                this.columnOwnerName.Caption = "OwnerNameInBangla";
                this.columnParentName.Caption = "FatherHusbandName";
                this.columnTotalBuildingHouse.Caption = "TaxAmount";
                this.columnTotalRawHouse.Caption = "DueAmount";
                this.columnTotalSemiBuildingHouse.Caption = "TaxPaymentDate";
                this.columnYearlyRentAmount.Caption = "YearName";
                this.columnTotalTax.Caption = "TotalCollection";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TaxInfoByVillOrWordRow NewTaxInfoByVillOrWordRow() {
                return ((TaxInfoByVillOrWordRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TaxInfoByVillOrWordRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(TaxInfoByVillOrWordRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TaxInfoByVillOrWordRowChanged != null)) {
                    this.TaxInfoByVillOrWordRowChanged(this, new TaxInfoByVillOrWordRowChangeEvent(((TaxInfoByVillOrWordRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TaxInfoByVillOrWordRowChanging != null)) {
                    this.TaxInfoByVillOrWordRowChanging(this, new TaxInfoByVillOrWordRowChangeEvent(((TaxInfoByVillOrWordRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TaxInfoByVillOrWordRowDeleted != null)) {
                    this.TaxInfoByVillOrWordRowDeleted(this, new TaxInfoByVillOrWordRowChangeEvent(((TaxInfoByVillOrWordRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TaxInfoByVillOrWordRowDeleting != null)) {
                    this.TaxInfoByVillOrWordRowDeleting(this, new TaxInfoByVillOrWordRowChangeEvent(((TaxInfoByVillOrWordRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveTaxInfoByVillOrWordRow(TaxInfoByVillOrWordRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                UPDataSet ds = new UPDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TaxInfoByVillOrWordDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TopSheetTblDataTable : global::System.Data.TypedTableBase<TopSheetTblRow> {
            
            private global::System.Data.DataColumn columnTotalPreviousDueCollectAmount;
            
            private global::System.Data.DataColumn columnTotalCollection;
            
            private global::System.Data.DataColumn columnTotalDues;
            
            private global::System.Data.DataColumn columnYearName;
            
            private global::System.Data.DataColumn columnWardNo;
            
            private global::System.Data.DataColumn columnTotalVillageCount;
            
            private global::System.Data.DataColumn columnTotalHoldingCount;
            
            private global::System.Data.DataColumn columnTotalTaxCollectHoldingCount;
            
            private global::System.Data.DataColumn columnDueTotalTaxCollectHoldingCount;
            
            private global::System.Data.DataColumn columnTotalTaxAmount;
            
            private global::System.Data.DataColumn columnTotalCollectTaxAmount;
            
            private global::System.Data.DataColumn columnTotalDueTaxAmount;
            
            private global::System.Data.DataColumn columnTotalPreviousDueAmount;
            
            private global::System.Data.DataColumn columnTaxCollectPercentage;
            
            private global::System.Data.DataColumn columnComments;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TopSheetTblDataTable() {
                this.TableName = "TopSheetTbl";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TopSheetTblDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected TopSheetTblDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalPreviousDueCollectAmountColumn {
                get {
                    return this.columnTotalPreviousDueCollectAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalCollectionColumn {
                get {
                    return this.columnTotalCollection;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalDuesColumn {
                get {
                    return this.columnTotalDues;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn YearNameColumn {
                get {
                    return this.columnYearName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WardNoColumn {
                get {
                    return this.columnWardNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalVillageCountColumn {
                get {
                    return this.columnTotalVillageCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalHoldingCountColumn {
                get {
                    return this.columnTotalHoldingCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalTaxCollectHoldingCountColumn {
                get {
                    return this.columnTotalTaxCollectHoldingCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DueTotalTaxCollectHoldingCountColumn {
                get {
                    return this.columnDueTotalTaxCollectHoldingCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalTaxAmountColumn {
                get {
                    return this.columnTotalTaxAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalCollectTaxAmountColumn {
                get {
                    return this.columnTotalCollectTaxAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalDueTaxAmountColumn {
                get {
                    return this.columnTotalDueTaxAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalPreviousDueAmountColumn {
                get {
                    return this.columnTotalPreviousDueAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TaxCollectPercentageColumn {
                get {
                    return this.columnTaxCollectPercentage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CommentsColumn {
                get {
                    return this.columnComments;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TopSheetTblRow this[int index] {
                get {
                    return ((TopSheetTblRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TopSheetTblRowChangeEventHandler TopSheetTblRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TopSheetTblRowChangeEventHandler TopSheetTblRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TopSheetTblRowChangeEventHandler TopSheetTblRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TopSheetTblRowChangeEventHandler TopSheetTblRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddTopSheetTblRow(TopSheetTblRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TopSheetTblRow AddTopSheetTblRow(string TotalPreviousDueCollectAmount, string TotalCollection, string TotalDues, string YearName, string WardNo, string TotalVillageCount, string TotalHoldingCount, string TotalTaxCollectHoldingCount, string DueTotalTaxCollectHoldingCount, string TotalTaxAmount, string TotalCollectTaxAmount, string TotalDueTaxAmount, string TotalPreviousDueAmount, string TaxCollectPercentage, string Comments) {
                TopSheetTblRow rowTopSheetTblRow = ((TopSheetTblRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        TotalPreviousDueCollectAmount,
                        TotalCollection,
                        TotalDues,
                        YearName,
                        WardNo,
                        TotalVillageCount,
                        TotalHoldingCount,
                        TotalTaxCollectHoldingCount,
                        DueTotalTaxCollectHoldingCount,
                        TotalTaxAmount,
                        TotalCollectTaxAmount,
                        TotalDueTaxAmount,
                        TotalPreviousDueAmount,
                        TaxCollectPercentage,
                        Comments};
                rowTopSheetTblRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTopSheetTblRow);
                return rowTopSheetTblRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                TopSheetTblDataTable cln = ((TopSheetTblDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TopSheetTblDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnTotalPreviousDueCollectAmount = base.Columns["TotalPreviousDueCollectAmount"];
                this.columnTotalCollection = base.Columns["TotalCollection"];
                this.columnTotalDues = base.Columns["TotalDues"];
                this.columnYearName = base.Columns["YearName"];
                this.columnWardNo = base.Columns["WardNo"];
                this.columnTotalVillageCount = base.Columns["TotalVillageCount"];
                this.columnTotalHoldingCount = base.Columns["TotalHoldingCount"];
                this.columnTotalTaxCollectHoldingCount = base.Columns["TotalTaxCollectHoldingCount"];
                this.columnDueTotalTaxCollectHoldingCount = base.Columns["DueTotalTaxCollectHoldingCount"];
                this.columnTotalTaxAmount = base.Columns["TotalTaxAmount"];
                this.columnTotalCollectTaxAmount = base.Columns["TotalCollectTaxAmount"];
                this.columnTotalDueTaxAmount = base.Columns["TotalDueTaxAmount"];
                this.columnTotalPreviousDueAmount = base.Columns["TotalPreviousDueAmount"];
                this.columnTaxCollectPercentage = base.Columns["TaxCollectPercentage"];
                this.columnComments = base.Columns["Comments"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnTotalPreviousDueCollectAmount = new global::System.Data.DataColumn("TotalPreviousDueCollectAmount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalPreviousDueCollectAmount);
                this.columnTotalCollection = new global::System.Data.DataColumn("TotalCollection", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalCollection);
                this.columnTotalDues = new global::System.Data.DataColumn("TotalDues", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalDues);
                this.columnYearName = new global::System.Data.DataColumn("YearName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYearName);
                this.columnWardNo = new global::System.Data.DataColumn("WardNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWardNo);
                this.columnTotalVillageCount = new global::System.Data.DataColumn("TotalVillageCount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalVillageCount);
                this.columnTotalHoldingCount = new global::System.Data.DataColumn("TotalHoldingCount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalHoldingCount);
                this.columnTotalTaxCollectHoldingCount = new global::System.Data.DataColumn("TotalTaxCollectHoldingCount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalTaxCollectHoldingCount);
                this.columnDueTotalTaxCollectHoldingCount = new global::System.Data.DataColumn("DueTotalTaxCollectHoldingCount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDueTotalTaxCollectHoldingCount);
                this.columnTotalTaxAmount = new global::System.Data.DataColumn("TotalTaxAmount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalTaxAmount);
                this.columnTotalCollectTaxAmount = new global::System.Data.DataColumn("TotalCollectTaxAmount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalCollectTaxAmount);
                this.columnTotalDueTaxAmount = new global::System.Data.DataColumn("TotalDueTaxAmount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalDueTaxAmount);
                this.columnTotalPreviousDueAmount = new global::System.Data.DataColumn("TotalPreviousDueAmount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalPreviousDueAmount);
                this.columnTaxCollectPercentage = new global::System.Data.DataColumn("TaxCollectPercentage", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaxCollectPercentage);
                this.columnComments = new global::System.Data.DataColumn("Comments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComments);
                this.columnTotalPreviousDueCollectAmount.Caption = "HoldingNo";
                this.columnTotalCollection.Caption = "OwnerNameInBangla";
                this.columnTotalDues.Caption = "FatherHusbandName";
                this.columnYearName.Caption = "MobileNo";
                this.columnTotalVillageCount.Caption = "TaxAmount";
                this.columnTotalHoldingCount.Caption = "DueAmount";
                this.columnTotalTaxCollectHoldingCount.Caption = "TaxPaymentDate";
                this.columnDueTotalTaxCollectHoldingCount.Caption = "YearName";
                this.columnTotalTaxAmount.Caption = "TotalCollection";
                this.columnTotalCollectTaxAmount.Caption = "VillageName";
                this.columnTotalDueTaxAmount.Caption = "PeviousDue";
                this.columnTotalPreviousDueAmount.Caption = "Comments";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TopSheetTblRow NewTopSheetTblRow() {
                return ((TopSheetTblRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TopSheetTblRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(TopSheetTblRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TopSheetTblRowChanged != null)) {
                    this.TopSheetTblRowChanged(this, new TopSheetTblRowChangeEvent(((TopSheetTblRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TopSheetTblRowChanging != null)) {
                    this.TopSheetTblRowChanging(this, new TopSheetTblRowChangeEvent(((TopSheetTblRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TopSheetTblRowDeleted != null)) {
                    this.TopSheetTblRowDeleted(this, new TopSheetTblRowChangeEvent(((TopSheetTblRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TopSheetTblRowDeleting != null)) {
                    this.TopSheetTblRowDeleting(this, new TopSheetTblRowChangeEvent(((TopSheetTblRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveTopSheetTblRow(TopSheetTblRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                UPDataSet ds = new UPDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TopSheetTblDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DailyPostingDataTable : global::System.Data.TypedTableBase<DailyPostingRow> {
            
            private global::System.Data.DataColumn columnHoldingNo;
            
            private global::System.Data.DataColumn columnHouseOwnerName;
            
            private global::System.Data.DataColumn columnMobileNo;
            
            private global::System.Data.DataColumn columnYearName;
            
            private global::System.Data.DataColumn columnTaxPaymentDateStr;
            
            private global::System.Data.DataColumn columnVillageName;
            
            private global::System.Data.DataColumn columnOutstandingAmount;
            
            private global::System.Data.DataColumn columnWardNo;
            
            private global::System.Data.DataColumn columnPreviousDueAmount;
            
            private global::System.Data.DataColumn columnTotalCollectAmount;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DailyPostingDataTable() {
                this.TableName = "DailyPosting";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal DailyPostingDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected DailyPostingDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HoldingNoColumn {
                get {
                    return this.columnHoldingNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HouseOwnerNameColumn {
                get {
                    return this.columnHouseOwnerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MobileNoColumn {
                get {
                    return this.columnMobileNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn YearNameColumn {
                get {
                    return this.columnYearName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TaxPaymentDateStrColumn {
                get {
                    return this.columnTaxPaymentDateStr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VillageNameColumn {
                get {
                    return this.columnVillageName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OutstandingAmountColumn {
                get {
                    return this.columnOutstandingAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WardNoColumn {
                get {
                    return this.columnWardNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PreviousDueAmountColumn {
                get {
                    return this.columnPreviousDueAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalCollectAmountColumn {
                get {
                    return this.columnTotalCollectAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DailyPostingRow this[int index] {
                get {
                    return ((DailyPostingRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DailyPostingRowChangeEventHandler DailyPostingRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DailyPostingRowChangeEventHandler DailyPostingRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DailyPostingRowChangeEventHandler DailyPostingRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DailyPostingRowChangeEventHandler DailyPostingRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddDailyPostingRow(DailyPostingRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DailyPostingRow AddDailyPostingRow(string HoldingNo, string HouseOwnerName, string MobileNo, string YearName, string TaxPaymentDateStr, string VillageName, string OutstandingAmount, string WardNo, string PreviousDueAmount, string TotalCollectAmount) {
                DailyPostingRow rowDailyPostingRow = ((DailyPostingRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        HoldingNo,
                        HouseOwnerName,
                        MobileNo,
                        YearName,
                        TaxPaymentDateStr,
                        VillageName,
                        OutstandingAmount,
                        WardNo,
                        PreviousDueAmount,
                        TotalCollectAmount};
                rowDailyPostingRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDailyPostingRow);
                return rowDailyPostingRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                DailyPostingDataTable cln = ((DailyPostingDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DailyPostingDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnHoldingNo = base.Columns["HoldingNo"];
                this.columnHouseOwnerName = base.Columns["HouseOwnerName"];
                this.columnMobileNo = base.Columns["MobileNo"];
                this.columnYearName = base.Columns["YearName"];
                this.columnTaxPaymentDateStr = base.Columns["TaxPaymentDateStr"];
                this.columnVillageName = base.Columns["VillageName"];
                this.columnOutstandingAmount = base.Columns["OutstandingAmount"];
                this.columnWardNo = base.Columns["WardNo"];
                this.columnPreviousDueAmount = base.Columns["PreviousDueAmount"];
                this.columnTotalCollectAmount = base.Columns["TotalCollectAmount"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnHoldingNo = new global::System.Data.DataColumn("HoldingNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHoldingNo);
                this.columnHouseOwnerName = new global::System.Data.DataColumn("HouseOwnerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHouseOwnerName);
                this.columnMobileNo = new global::System.Data.DataColumn("MobileNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMobileNo);
                this.columnYearName = new global::System.Data.DataColumn("YearName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYearName);
                this.columnTaxPaymentDateStr = new global::System.Data.DataColumn("TaxPaymentDateStr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaxPaymentDateStr);
                this.columnVillageName = new global::System.Data.DataColumn("VillageName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVillageName);
                this.columnOutstandingAmount = new global::System.Data.DataColumn("OutstandingAmount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOutstandingAmount);
                this.columnWardNo = new global::System.Data.DataColumn("WardNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWardNo);
                this.columnPreviousDueAmount = new global::System.Data.DataColumn("PreviousDueAmount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPreviousDueAmount);
                this.columnTotalCollectAmount = new global::System.Data.DataColumn("TotalCollectAmount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalCollectAmount);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DailyPostingRow NewDailyPostingRow() {
                return ((DailyPostingRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DailyPostingRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(DailyPostingRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DailyPostingRowChanged != null)) {
                    this.DailyPostingRowChanged(this, new DailyPostingRowChangeEvent(((DailyPostingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DailyPostingRowChanging != null)) {
                    this.DailyPostingRowChanging(this, new DailyPostingRowChangeEvent(((DailyPostingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DailyPostingRowDeleted != null)) {
                    this.DailyPostingRowDeleted(this, new DailyPostingRowChangeEvent(((DailyPostingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DailyPostingRowDeleting != null)) {
                    this.DailyPostingRowDeleting(this, new DailyPostingRowChangeEvent(((DailyPostingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveDailyPostingRow(DailyPostingRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                UPDataSet ds = new UPDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DailyPostingDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TranDataTable : global::System.Data.TypedTableBase<TranRow> {
            
            private global::System.Data.DataColumn columnWardNo;
            
            private global::System.Data.DataColumn columnTotalHouseOwnerStr;
            
            private global::System.Data.DataColumn columnGrandTotalHouseOwnerStr;
            
            private global::System.Data.DataColumn columnTotalMaleStr;
            
            private global::System.Data.DataColumn columnGrandTotalMaleStr;
            
            private global::System.Data.DataColumn columnTotalFemaleStr;
            
            private global::System.Data.DataColumn columnGrandTotalFemaleStr;
            
            private global::System.Data.DataColumn columnTotalSocialBenefitTakingCountStr;
            
            private global::System.Data.DataColumn columnGrandTotalSocialBenefitTakingCountStr;
            
            private global::System.Data.DataColumn columnTotalPoorStr;
            
            private global::System.Data.DataColumn columnGrandTotalPoorStr;
            
            private global::System.Data.DataColumn columnTotalMidPoorStr;
            
            private global::System.Data.DataColumn columnGrandTotalMidPoorStr;
            
            private global::System.Data.DataColumn columnTotalRichStr;
            
            private global::System.Data.DataColumn columnGrandTotalRichStr;
            
            private global::System.Data.DataColumn columnTotalPopulationStr;
            
            private global::System.Data.DataColumn columnGrandTotalPopulationStr;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TranDataTable() {
                this.TableName = "Tran";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TranDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected TranDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WardNoColumn {
                get {
                    return this.columnWardNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalHouseOwnerStrColumn {
                get {
                    return this.columnTotalHouseOwnerStr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GrandTotalHouseOwnerStrColumn {
                get {
                    return this.columnGrandTotalHouseOwnerStr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalMaleStrColumn {
                get {
                    return this.columnTotalMaleStr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GrandTotalMaleStrColumn {
                get {
                    return this.columnGrandTotalMaleStr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalFemaleStrColumn {
                get {
                    return this.columnTotalFemaleStr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GrandTotalFemaleStrColumn {
                get {
                    return this.columnGrandTotalFemaleStr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalSocialBenefitTakingCountStrColumn {
                get {
                    return this.columnTotalSocialBenefitTakingCountStr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GrandTotalSocialBenefitTakingCountStrColumn {
                get {
                    return this.columnGrandTotalSocialBenefitTakingCountStr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalPoorStrColumn {
                get {
                    return this.columnTotalPoorStr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GrandTotalPoorStrColumn {
                get {
                    return this.columnGrandTotalPoorStr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalMidPoorStrColumn {
                get {
                    return this.columnTotalMidPoorStr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GrandTotalMidPoorStrColumn {
                get {
                    return this.columnGrandTotalMidPoorStr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalRichStrColumn {
                get {
                    return this.columnTotalRichStr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GrandTotalRichStrColumn {
                get {
                    return this.columnGrandTotalRichStr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalPopulationStrColumn {
                get {
                    return this.columnTotalPopulationStr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GrandTotalPopulationStrColumn {
                get {
                    return this.columnGrandTotalPopulationStr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TranRow this[int index] {
                get {
                    return ((TranRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TranRowChangeEventHandler TranRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TranRowChangeEventHandler TranRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TranRowChangeEventHandler TranRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TranRowChangeEventHandler TranRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddTranRow(TranRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TranRow AddTranRow(
                        string WardNo, 
                        string TotalHouseOwnerStr, 
                        string GrandTotalHouseOwnerStr, 
                        string TotalMaleStr, 
                        string GrandTotalMaleStr, 
                        string TotalFemaleStr, 
                        string GrandTotalFemaleStr, 
                        string TotalSocialBenefitTakingCountStr, 
                        string GrandTotalSocialBenefitTakingCountStr, 
                        string TotalPoorStr, 
                        string GrandTotalPoorStr, 
                        string TotalMidPoorStr, 
                        string GrandTotalMidPoorStr, 
                        string TotalRichStr, 
                        string GrandTotalRichStr, 
                        string TotalPopulationStr, 
                        string GrandTotalPopulationStr) {
                TranRow rowTranRow = ((TranRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        WardNo,
                        TotalHouseOwnerStr,
                        GrandTotalHouseOwnerStr,
                        TotalMaleStr,
                        GrandTotalMaleStr,
                        TotalFemaleStr,
                        GrandTotalFemaleStr,
                        TotalSocialBenefitTakingCountStr,
                        GrandTotalSocialBenefitTakingCountStr,
                        TotalPoorStr,
                        GrandTotalPoorStr,
                        TotalMidPoorStr,
                        GrandTotalMidPoorStr,
                        TotalRichStr,
                        GrandTotalRichStr,
                        TotalPopulationStr,
                        GrandTotalPopulationStr};
                rowTranRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTranRow);
                return rowTranRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                TranDataTable cln = ((TranDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TranDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnWardNo = base.Columns["WardNo"];
                this.columnTotalHouseOwnerStr = base.Columns["TotalHouseOwnerStr"];
                this.columnGrandTotalHouseOwnerStr = base.Columns["GrandTotalHouseOwnerStr"];
                this.columnTotalMaleStr = base.Columns["TotalMaleStr"];
                this.columnGrandTotalMaleStr = base.Columns["GrandTotalMaleStr"];
                this.columnTotalFemaleStr = base.Columns["TotalFemaleStr"];
                this.columnGrandTotalFemaleStr = base.Columns["GrandTotalFemaleStr"];
                this.columnTotalSocialBenefitTakingCountStr = base.Columns["TotalSocialBenefitTakingCountStr"];
                this.columnGrandTotalSocialBenefitTakingCountStr = base.Columns["GrandTotalSocialBenefitTakingCountStr"];
                this.columnTotalPoorStr = base.Columns["TotalPoorStr"];
                this.columnGrandTotalPoorStr = base.Columns["GrandTotalPoorStr"];
                this.columnTotalMidPoorStr = base.Columns["TotalMidPoorStr"];
                this.columnGrandTotalMidPoorStr = base.Columns["GrandTotalMidPoorStr"];
                this.columnTotalRichStr = base.Columns["TotalRichStr"];
                this.columnGrandTotalRichStr = base.Columns["GrandTotalRichStr"];
                this.columnTotalPopulationStr = base.Columns["TotalPopulationStr"];
                this.columnGrandTotalPopulationStr = base.Columns["GrandTotalPopulationStr"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnWardNo = new global::System.Data.DataColumn("WardNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWardNo);
                this.columnTotalHouseOwnerStr = new global::System.Data.DataColumn("TotalHouseOwnerStr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalHouseOwnerStr);
                this.columnGrandTotalHouseOwnerStr = new global::System.Data.DataColumn("GrandTotalHouseOwnerStr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrandTotalHouseOwnerStr);
                this.columnTotalMaleStr = new global::System.Data.DataColumn("TotalMaleStr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalMaleStr);
                this.columnGrandTotalMaleStr = new global::System.Data.DataColumn("GrandTotalMaleStr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrandTotalMaleStr);
                this.columnTotalFemaleStr = new global::System.Data.DataColumn("TotalFemaleStr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalFemaleStr);
                this.columnGrandTotalFemaleStr = new global::System.Data.DataColumn("GrandTotalFemaleStr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrandTotalFemaleStr);
                this.columnTotalSocialBenefitTakingCountStr = new global::System.Data.DataColumn("TotalSocialBenefitTakingCountStr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalSocialBenefitTakingCountStr);
                this.columnGrandTotalSocialBenefitTakingCountStr = new global::System.Data.DataColumn("GrandTotalSocialBenefitTakingCountStr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrandTotalSocialBenefitTakingCountStr);
                this.columnTotalPoorStr = new global::System.Data.DataColumn("TotalPoorStr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalPoorStr);
                this.columnGrandTotalPoorStr = new global::System.Data.DataColumn("GrandTotalPoorStr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrandTotalPoorStr);
                this.columnTotalMidPoorStr = new global::System.Data.DataColumn("TotalMidPoorStr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalMidPoorStr);
                this.columnGrandTotalMidPoorStr = new global::System.Data.DataColumn("GrandTotalMidPoorStr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrandTotalMidPoorStr);
                this.columnTotalRichStr = new global::System.Data.DataColumn("TotalRichStr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalRichStr);
                this.columnGrandTotalRichStr = new global::System.Data.DataColumn("GrandTotalRichStr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrandTotalRichStr);
                this.columnTotalPopulationStr = new global::System.Data.DataColumn("TotalPopulationStr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalPopulationStr);
                this.columnGrandTotalPopulationStr = new global::System.Data.DataColumn("GrandTotalPopulationStr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrandTotalPopulationStr);
                this.columnWardNo.Caption = "HoldingNo";
                this.columnTotalHouseOwnerStr.Caption = "OwnerNameInBangla";
                this.columnGrandTotalHouseOwnerStr.Caption = "FatherHusbandName";
                this.columnTotalMaleStr.Caption = "MobileNo";
                this.columnGrandTotalMaleStr.Caption = "WardNo";
                this.columnTotalFemaleStr.Caption = "TaxAmount";
                this.columnGrandTotalFemaleStr.Caption = "DueAmount";
                this.columnTotalSocialBenefitTakingCountStr.Caption = "TaxPaymentDate";
                this.columnGrandTotalSocialBenefitTakingCountStr.Caption = "YearName";
                this.columnTotalPoorStr.Caption = "TotalCollection";
                this.columnGrandTotalPoorStr.Caption = "VillageName";
                this.columnTotalMidPoorStr.Caption = "TaxAmountStr";
                this.columnGrandTotalMidPoorStr.Caption = "DueAmountStr";
                this.columnTotalRichStr.Caption = "TaxPaymentDateStr";
                this.columnGrandTotalRichStr.Caption = "TotalCollectionStr";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TranRow NewTranRow() {
                return ((TranRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TranRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(TranRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TranRowChanged != null)) {
                    this.TranRowChanged(this, new TranRowChangeEvent(((TranRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TranRowChanging != null)) {
                    this.TranRowChanging(this, new TranRowChangeEvent(((TranRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TranRowDeleted != null)) {
                    this.TranRowDeleted(this, new TranRowChangeEvent(((TranRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TranRowDeleting != null)) {
                    this.TranRowDeleting(this, new TranRowChangeEvent(((TranRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveTranRow(TranRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                UPDataSet ds = new UPDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TranDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SingleHoldingTaxRow : global::System.Data.DataRow {
            
            private SingleHoldingTaxDataTable tableSingleHoldingTax;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SingleHoldingTaxRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSingleHoldingTax = ((SingleHoldingTaxDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string HoldingNo {
                get {
                    try {
                        return ((string)(this[this.tableSingleHoldingTax.HoldingNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HoldingNo\' in table \'SingleHoldingTax\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSingleHoldingTax.HoldingNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OwnerName {
                get {
                    try {
                        return ((string)(this[this.tableSingleHoldingTax.OwnerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OwnerName\' in table \'SingleHoldingTax\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSingleHoldingTax.OwnerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string WardNo {
                get {
                    try {
                        return ((string)(this[this.tableSingleHoldingTax.WardNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WardNo\' in table \'SingleHoldingTax\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSingleHoldingTax.WardNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ParentName {
                get {
                    try {
                        return ((string)(this[this.tableSingleHoldingTax.ParentNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ParentName\' in table \'SingleHoldingTax\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSingleHoldingTax.ParentNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MobileNo {
                get {
                    try {
                        return ((string)(this[this.tableSingleHoldingTax.MobileNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MobileNo\' in table \'SingleHoldingTax\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSingleHoldingTax.MobileNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BillAddress {
                get {
                    try {
                        return ((string)(this[this.tableSingleHoldingTax.BillAddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BillAddress\' in table \'SingleHoldingTax\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSingleHoldingTax.BillAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PaymentDate {
                get {
                    try {
                        return ((string)(this[this.tableSingleHoldingTax.PaymentDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PaymentDate\' in table \'SingleHoldingTax\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSingleHoldingTax.PaymentDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CurrentAmount {
                get {
                    try {
                        return ((string)(this[this.tableSingleHoldingTax.CurrentAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CurrentAmount\' in table \'SingleHoldingTax\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSingleHoldingTax.CurrentAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CurrentDueAmount {
                get {
                    try {
                        return ((string)(this[this.tableSingleHoldingTax.CurrentDueAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CurrentDueAmount\' in table \'SingleHoldingTax\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSingleHoldingTax.CurrentDueAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PrevDueAmount {
                get {
                    try {
                        return ((string)(this[this.tableSingleHoldingTax.PrevDueAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PrevDueAmount\' in table \'SingleHoldingTax\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSingleHoldingTax.PrevDueAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PrevAmount {
                get {
                    try {
                        return ((string)(this[this.tableSingleHoldingTax.PrevAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PrevAmount\' in table \'SingleHoldingTax\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSingleHoldingTax.PrevAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PenaltyDueAmount {
                get {
                    try {
                        return ((string)(this[this.tableSingleHoldingTax.PenaltyDueAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PenaltyDueAmount\' in table \'SingleHoldingTax\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSingleHoldingTax.PenaltyDueAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PenaltyAmount {
                get {
                    try {
                        return ((string)(this[this.tableSingleHoldingTax.PenaltyAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PenaltyAmount\' in table \'SingleHoldingTax\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSingleHoldingTax.PenaltyAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CurrentTotalAmount {
                get {
                    try {
                        return ((string)(this[this.tableSingleHoldingTax.CurrentTotalAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CurrentTotalAmount\' in table \'SingleHoldingTax\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSingleHoldingTax.CurrentTotalAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PrevTotalAmount {
                get {
                    try {
                        return ((string)(this[this.tableSingleHoldingTax.PrevTotalAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PrevTotalAmount\' in table \'SingleHoldingTax\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSingleHoldingTax.PrevTotalAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PenaltyTotalAmount {
                get {
                    try {
                        return ((string)(this[this.tableSingleHoldingTax.PenaltyTotalAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PenaltyTotalAmount\' in table \'SingleHoldingTax\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSingleHoldingTax.PenaltyTotalAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string GrandTotalAmount {
                get {
                    try {
                        return ((string)(this[this.tableSingleHoldingTax.GrandTotalAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GrandTotalAmount\' in table \'SingleHoldingTax\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSingleHoldingTax.GrandTotalAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CurrentAmountStr {
                get {
                    try {
                        return ((string)(this[this.tableSingleHoldingTax.CurrentAmountStrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CurrentAmountStr\' in table \'SingleHoldingTax\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSingleHoldingTax.CurrentAmountStrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CurrentDueAmountStr {
                get {
                    try {
                        return ((string)(this[this.tableSingleHoldingTax.CurrentDueAmountStrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CurrentDueAmountStr\' in table \'SingleHoldingTax\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableSingleHoldingTax.CurrentDueAmountStrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PrevDueAmountStr {
                get {
                    try {
                        return ((string)(this[this.tableSingleHoldingTax.PrevDueAmountStrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PrevDueAmountStr\' in table \'SingleHoldingTax\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSingleHoldingTax.PrevDueAmountStrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PenaltyDueAmountStr {
                get {
                    try {
                        return ((string)(this[this.tableSingleHoldingTax.PenaltyDueAmountStrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PenaltyDueAmountStr\' in table \'SingleHoldingTax\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableSingleHoldingTax.PenaltyDueAmountStrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PenaltyAmountStr {
                get {
                    try {
                        return ((string)(this[this.tableSingleHoldingTax.PenaltyAmountStrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PenaltyAmountStr\' in table \'SingleHoldingTax\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSingleHoldingTax.PenaltyAmountStrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CurrentTotalAmountStr {
                get {
                    try {
                        return ((string)(this[this.tableSingleHoldingTax.CurrentTotalAmountStrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CurrentTotalAmountStr\' in table \'SingleHoldingTax\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableSingleHoldingTax.CurrentTotalAmountStrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PenaltyTotalAmountStr {
                get {
                    try {
                        return ((string)(this[this.tableSingleHoldingTax.PenaltyTotalAmountStrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PenaltyTotalAmountStr\' in table \'SingleHoldingTax\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableSingleHoldingTax.PenaltyTotalAmountStrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string GrandTotalAmountStr {
                get {
                    try {
                        return ((string)(this[this.tableSingleHoldingTax.GrandTotalAmountStrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GrandTotalAmountStr\' in table \'SingleHoldingTax\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableSingleHoldingTax.GrandTotalAmountStrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string HoldingTotalStr {
                get {
                    try {
                        return ((string)(this[this.tableSingleHoldingTax.HoldingTotalStrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HoldingTotalStr\' in table \'SingleHoldingTax\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSingleHoldingTax.HoldingTotalStrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PrevTotalStr {
                get {
                    try {
                        return ((string)(this[this.tableSingleHoldingTax.PrevTotalStrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PrevTotalStr\' in table \'SingleHoldingTax\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSingleHoldingTax.PrevTotalStrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TotalPenaltyStr {
                get {
                    try {
                        return ((string)(this[this.tableSingleHoldingTax.TotalPenaltyStrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalPenaltyStr\' in table \'SingleHoldingTax\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSingleHoldingTax.TotalPenaltyStrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PrevAmountStr {
                get {
                    try {
                        return ((string)(this[this.tableSingleHoldingTax.PrevAmountStrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PrevAmountStr\' in table \'SingleHoldingTax\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSingleHoldingTax.PrevAmountStrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LastPaymentDateStr {
                get {
                    try {
                        return ((string)(this[this.tableSingleHoldingTax.LastPaymentDateStrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastPaymentDateStr\' in table \'SingleHoldingTax\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSingleHoldingTax.LastPaymentDateStrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHoldingNoNull() {
                return this.IsNull(this.tableSingleHoldingTax.HoldingNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHoldingNoNull() {
                this[this.tableSingleHoldingTax.HoldingNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOwnerNameNull() {
                return this.IsNull(this.tableSingleHoldingTax.OwnerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOwnerNameNull() {
                this[this.tableSingleHoldingTax.OwnerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWardNoNull() {
                return this.IsNull(this.tableSingleHoldingTax.WardNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWardNoNull() {
                this[this.tableSingleHoldingTax.WardNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsParentNameNull() {
                return this.IsNull(this.tableSingleHoldingTax.ParentNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetParentNameNull() {
                this[this.tableSingleHoldingTax.ParentNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMobileNoNull() {
                return this.IsNull(this.tableSingleHoldingTax.MobileNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMobileNoNull() {
                this[this.tableSingleHoldingTax.MobileNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBillAddressNull() {
                return this.IsNull(this.tableSingleHoldingTax.BillAddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBillAddressNull() {
                this[this.tableSingleHoldingTax.BillAddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPaymentDateNull() {
                return this.IsNull(this.tableSingleHoldingTax.PaymentDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPaymentDateNull() {
                this[this.tableSingleHoldingTax.PaymentDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCurrentAmountNull() {
                return this.IsNull(this.tableSingleHoldingTax.CurrentAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCurrentAmountNull() {
                this[this.tableSingleHoldingTax.CurrentAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCurrentDueAmountNull() {
                return this.IsNull(this.tableSingleHoldingTax.CurrentDueAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCurrentDueAmountNull() {
                this[this.tableSingleHoldingTax.CurrentDueAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPrevDueAmountNull() {
                return this.IsNull(this.tableSingleHoldingTax.PrevDueAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPrevDueAmountNull() {
                this[this.tableSingleHoldingTax.PrevDueAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPrevAmountNull() {
                return this.IsNull(this.tableSingleHoldingTax.PrevAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPrevAmountNull() {
                this[this.tableSingleHoldingTax.PrevAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPenaltyDueAmountNull() {
                return this.IsNull(this.tableSingleHoldingTax.PenaltyDueAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPenaltyDueAmountNull() {
                this[this.tableSingleHoldingTax.PenaltyDueAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPenaltyAmountNull() {
                return this.IsNull(this.tableSingleHoldingTax.PenaltyAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPenaltyAmountNull() {
                this[this.tableSingleHoldingTax.PenaltyAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCurrentTotalAmountNull() {
                return this.IsNull(this.tableSingleHoldingTax.CurrentTotalAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCurrentTotalAmountNull() {
                this[this.tableSingleHoldingTax.CurrentTotalAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPrevTotalAmountNull() {
                return this.IsNull(this.tableSingleHoldingTax.PrevTotalAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPrevTotalAmountNull() {
                this[this.tableSingleHoldingTax.PrevTotalAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPenaltyTotalAmountNull() {
                return this.IsNull(this.tableSingleHoldingTax.PenaltyTotalAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPenaltyTotalAmountNull() {
                this[this.tableSingleHoldingTax.PenaltyTotalAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGrandTotalAmountNull() {
                return this.IsNull(this.tableSingleHoldingTax.GrandTotalAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGrandTotalAmountNull() {
                this[this.tableSingleHoldingTax.GrandTotalAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCurrentAmountStrNull() {
                return this.IsNull(this.tableSingleHoldingTax.CurrentAmountStrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCurrentAmountStrNull() {
                this[this.tableSingleHoldingTax.CurrentAmountStrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCurrentDueAmountStrNull() {
                return this.IsNull(this.tableSingleHoldingTax.CurrentDueAmountStrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCurrentDueAmountStrNull() {
                this[this.tableSingleHoldingTax.CurrentDueAmountStrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPrevDueAmountStrNull() {
                return this.IsNull(this.tableSingleHoldingTax.PrevDueAmountStrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPrevDueAmountStrNull() {
                this[this.tableSingleHoldingTax.PrevDueAmountStrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPenaltyDueAmountStrNull() {
                return this.IsNull(this.tableSingleHoldingTax.PenaltyDueAmountStrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPenaltyDueAmountStrNull() {
                this[this.tableSingleHoldingTax.PenaltyDueAmountStrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPenaltyAmountStrNull() {
                return this.IsNull(this.tableSingleHoldingTax.PenaltyAmountStrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPenaltyAmountStrNull() {
                this[this.tableSingleHoldingTax.PenaltyAmountStrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCurrentTotalAmountStrNull() {
                return this.IsNull(this.tableSingleHoldingTax.CurrentTotalAmountStrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCurrentTotalAmountStrNull() {
                this[this.tableSingleHoldingTax.CurrentTotalAmountStrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPenaltyTotalAmountStrNull() {
                return this.IsNull(this.tableSingleHoldingTax.PenaltyTotalAmountStrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPenaltyTotalAmountStrNull() {
                this[this.tableSingleHoldingTax.PenaltyTotalAmountStrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGrandTotalAmountStrNull() {
                return this.IsNull(this.tableSingleHoldingTax.GrandTotalAmountStrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGrandTotalAmountStrNull() {
                this[this.tableSingleHoldingTax.GrandTotalAmountStrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHoldingTotalStrNull() {
                return this.IsNull(this.tableSingleHoldingTax.HoldingTotalStrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHoldingTotalStrNull() {
                this[this.tableSingleHoldingTax.HoldingTotalStrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPrevTotalStrNull() {
                return this.IsNull(this.tableSingleHoldingTax.PrevTotalStrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPrevTotalStrNull() {
                this[this.tableSingleHoldingTax.PrevTotalStrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalPenaltyStrNull() {
                return this.IsNull(this.tableSingleHoldingTax.TotalPenaltyStrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalPenaltyStrNull() {
                this[this.tableSingleHoldingTax.TotalPenaltyStrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPrevAmountStrNull() {
                return this.IsNull(this.tableSingleHoldingTax.PrevAmountStrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPrevAmountStrNull() {
                this[this.tableSingleHoldingTax.PrevAmountStrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLastPaymentDateStrNull() {
                return this.IsNull(this.tableSingleHoldingTax.LastPaymentDateStrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLastPaymentDateStrNull() {
                this[this.tableSingleHoldingTax.LastPaymentDateStrColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class TaxReceiptRow : global::System.Data.DataRow {
            
            private TaxReceiptDataTable tableTaxReceipt;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TaxReceiptRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTaxReceipt = ((TaxReceiptDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string HoldingNo {
                get {
                    try {
                        return ((string)(this[this.tableTaxReceipt.HoldingNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HoldingNo\' in table \'TaxReceipt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTaxReceipt.HoldingNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OwnerNameInBangla {
                get {
                    try {
                        return ((string)(this[this.tableTaxReceipt.OwnerNameInBanglaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OwnerNameInBangla\' in table \'TaxReceipt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTaxReceipt.OwnerNameInBanglaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FatherHusbandName {
                get {
                    try {
                        return ((string)(this[this.tableTaxReceipt.FatherHusbandNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FatherHusbandName\' in table \'TaxReceipt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTaxReceipt.FatherHusbandNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MobileNo {
                get {
                    try {
                        return ((string)(this[this.tableTaxReceipt.MobileNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MobileNo\' in table \'TaxReceipt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTaxReceipt.MobileNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string WardNo {
                get {
                    try {
                        return ((string)(this[this.tableTaxReceipt.WardNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WardNo\' in table \'TaxReceipt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTaxReceipt.WardNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TaxAmount {
                get {
                    try {
                        return ((string)(this[this.tableTaxReceipt.TaxAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TaxAmount\' in table \'TaxReceipt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTaxReceipt.TaxAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DueAmount {
                get {
                    try {
                        return ((string)(this[this.tableTaxReceipt.DueAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DueAmount\' in table \'TaxReceipt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTaxReceipt.DueAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TaxPaymentDate {
                get {
                    try {
                        return ((string)(this[this.tableTaxReceipt.TaxPaymentDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TaxPaymentDate\' in table \'TaxReceipt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTaxReceipt.TaxPaymentDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string YearName {
                get {
                    try {
                        return ((string)(this[this.tableTaxReceipt.YearNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'YearName\' in table \'TaxReceipt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTaxReceipt.YearNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TotalCollection {
                get {
                    try {
                        return ((string)(this[this.tableTaxReceipt.TotalCollectionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalCollection\' in table \'TaxReceipt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTaxReceipt.TotalCollectionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string VillageName {
                get {
                    try {
                        return ((string)(this[this.tableTaxReceipt.VillageNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VillageName\' in table \'TaxReceipt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTaxReceipt.VillageNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TaxAmountStr {
                get {
                    try {
                        return ((string)(this[this.tableTaxReceipt.TaxAmountStrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TaxAmountStr\' in table \'TaxReceipt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTaxReceipt.TaxAmountStrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DueAmountStr {
                get {
                    try {
                        return ((string)(this[this.tableTaxReceipt.DueAmountStrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DueAmountStr\' in table \'TaxReceipt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTaxReceipt.DueAmountStrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TaxPaymentDateStr {
                get {
                    try {
                        return ((string)(this[this.tableTaxReceipt.TaxPaymentDateStrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TaxPaymentDateStr\' in table \'TaxReceipt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTaxReceipt.TaxPaymentDateStrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TotalCollectionStr {
                get {
                    try {
                        return ((string)(this[this.tableTaxReceipt.TotalCollectionStrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalCollectionStr\' in table \'TaxReceipt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTaxReceipt.TotalCollectionStrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHoldingNoNull() {
                return this.IsNull(this.tableTaxReceipt.HoldingNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHoldingNoNull() {
                this[this.tableTaxReceipt.HoldingNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOwnerNameInBanglaNull() {
                return this.IsNull(this.tableTaxReceipt.OwnerNameInBanglaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOwnerNameInBanglaNull() {
                this[this.tableTaxReceipt.OwnerNameInBanglaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFatherHusbandNameNull() {
                return this.IsNull(this.tableTaxReceipt.FatherHusbandNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFatherHusbandNameNull() {
                this[this.tableTaxReceipt.FatherHusbandNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMobileNoNull() {
                return this.IsNull(this.tableTaxReceipt.MobileNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMobileNoNull() {
                this[this.tableTaxReceipt.MobileNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWardNoNull() {
                return this.IsNull(this.tableTaxReceipt.WardNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWardNoNull() {
                this[this.tableTaxReceipt.WardNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTaxAmountNull() {
                return this.IsNull(this.tableTaxReceipt.TaxAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTaxAmountNull() {
                this[this.tableTaxReceipt.TaxAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDueAmountNull() {
                return this.IsNull(this.tableTaxReceipt.DueAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDueAmountNull() {
                this[this.tableTaxReceipt.DueAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTaxPaymentDateNull() {
                return this.IsNull(this.tableTaxReceipt.TaxPaymentDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTaxPaymentDateNull() {
                this[this.tableTaxReceipt.TaxPaymentDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsYearNameNull() {
                return this.IsNull(this.tableTaxReceipt.YearNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetYearNameNull() {
                this[this.tableTaxReceipt.YearNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalCollectionNull() {
                return this.IsNull(this.tableTaxReceipt.TotalCollectionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalCollectionNull() {
                this[this.tableTaxReceipt.TotalCollectionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVillageNameNull() {
                return this.IsNull(this.tableTaxReceipt.VillageNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVillageNameNull() {
                this[this.tableTaxReceipt.VillageNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTaxAmountStrNull() {
                return this.IsNull(this.tableTaxReceipt.TaxAmountStrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTaxAmountStrNull() {
                this[this.tableTaxReceipt.TaxAmountStrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDueAmountStrNull() {
                return this.IsNull(this.tableTaxReceipt.DueAmountStrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDueAmountStrNull() {
                this[this.tableTaxReceipt.DueAmountStrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTaxPaymentDateStrNull() {
                return this.IsNull(this.tableTaxReceipt.TaxPaymentDateStrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTaxPaymentDateStrNull() {
                this[this.tableTaxReceipt.TaxPaymentDateStrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalCollectionStrNull() {
                return this.IsNull(this.tableTaxReceipt.TotalCollectionStrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalCollectionStrNull() {
                this[this.tableTaxReceipt.TotalCollectionStrColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class TaxInfoByVillOrWordRow : global::System.Data.DataRow {
            
            private TaxInfoByVillOrWordDataTable tableTaxInfoByVillOrWord;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TaxInfoByVillOrWordRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTaxInfoByVillOrWord = ((TaxInfoByVillOrWordDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string HoldingNo {
                get {
                    try {
                        return ((string)(this[this.tableTaxInfoByVillOrWord.HoldingNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HoldingNo\' in table \'TaxInfoByVillOrWord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTaxInfoByVillOrWord.HoldingNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OwnerName {
                get {
                    try {
                        return ((string)(this[this.tableTaxInfoByVillOrWord.OwnerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OwnerName\' in table \'TaxInfoByVillOrWord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTaxInfoByVillOrWord.OwnerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ParentName {
                get {
                    try {
                        return ((string)(this[this.tableTaxInfoByVillOrWord.ParentNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ParentName\' in table \'TaxInfoByVillOrWord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTaxInfoByVillOrWord.ParentNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MobileNo {
                get {
                    try {
                        return ((string)(this[this.tableTaxInfoByVillOrWord.MobileNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MobileNo\' in table \'TaxInfoByVillOrWord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTaxInfoByVillOrWord.MobileNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string WardNo {
                get {
                    try {
                        return ((string)(this[this.tableTaxInfoByVillOrWord.WardNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WardNo\' in table \'TaxInfoByVillOrWord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTaxInfoByVillOrWord.WardNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TotalBuildingHouse {
                get {
                    try {
                        return ((string)(this[this.tableTaxInfoByVillOrWord.TotalBuildingHouseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalBuildingHouse\' in table \'TaxInfoByVillOrWord\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableTaxInfoByVillOrWord.TotalBuildingHouseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TotalRawHouse {
                get {
                    try {
                        return ((string)(this[this.tableTaxInfoByVillOrWord.TotalRawHouseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalRawHouse\' in table \'TaxInfoByVillOrWord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTaxInfoByVillOrWord.TotalRawHouseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TotalSemiBuildingHouse {
                get {
                    try {
                        return ((string)(this[this.tableTaxInfoByVillOrWord.TotalSemiBuildingHouseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalSemiBuildingHouse\' in table \'TaxInfoByVillOrWord\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableTaxInfoByVillOrWord.TotalSemiBuildingHouseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string YearlyRentAmount {
                get {
                    try {
                        return ((string)(this[this.tableTaxInfoByVillOrWord.YearlyRentAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'YearlyRentAmount\' in table \'TaxInfoByVillOrWord\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableTaxInfoByVillOrWord.YearlyRentAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TotalTax {
                get {
                    try {
                        return ((string)(this[this.tableTaxInfoByVillOrWord.TotalTaxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalTax\' in table \'TaxInfoByVillOrWord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTaxInfoByVillOrWord.TotalTaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string VillageName {
                get {
                    try {
                        return ((string)(this[this.tableTaxInfoByVillOrWord.VillageNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VillageName\' in table \'TaxInfoByVillOrWord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTaxInfoByVillOrWord.VillageNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PeviousDue {
                get {
                    try {
                        return ((string)(this[this.tableTaxInfoByVillOrWord.PeviousDueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PeviousDue\' in table \'TaxInfoByVillOrWord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTaxInfoByVillOrWord.PeviousDueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Comments {
                get {
                    try {
                        return ((string)(this[this.tableTaxInfoByVillOrWord.CommentsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comments\' in table \'TaxInfoByVillOrWord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTaxInfoByVillOrWord.CommentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHoldingNoNull() {
                return this.IsNull(this.tableTaxInfoByVillOrWord.HoldingNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHoldingNoNull() {
                this[this.tableTaxInfoByVillOrWord.HoldingNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOwnerNameNull() {
                return this.IsNull(this.tableTaxInfoByVillOrWord.OwnerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOwnerNameNull() {
                this[this.tableTaxInfoByVillOrWord.OwnerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsParentNameNull() {
                return this.IsNull(this.tableTaxInfoByVillOrWord.ParentNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetParentNameNull() {
                this[this.tableTaxInfoByVillOrWord.ParentNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMobileNoNull() {
                return this.IsNull(this.tableTaxInfoByVillOrWord.MobileNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMobileNoNull() {
                this[this.tableTaxInfoByVillOrWord.MobileNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWardNoNull() {
                return this.IsNull(this.tableTaxInfoByVillOrWord.WardNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWardNoNull() {
                this[this.tableTaxInfoByVillOrWord.WardNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalBuildingHouseNull() {
                return this.IsNull(this.tableTaxInfoByVillOrWord.TotalBuildingHouseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalBuildingHouseNull() {
                this[this.tableTaxInfoByVillOrWord.TotalBuildingHouseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalRawHouseNull() {
                return this.IsNull(this.tableTaxInfoByVillOrWord.TotalRawHouseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalRawHouseNull() {
                this[this.tableTaxInfoByVillOrWord.TotalRawHouseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalSemiBuildingHouseNull() {
                return this.IsNull(this.tableTaxInfoByVillOrWord.TotalSemiBuildingHouseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalSemiBuildingHouseNull() {
                this[this.tableTaxInfoByVillOrWord.TotalSemiBuildingHouseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsYearlyRentAmountNull() {
                return this.IsNull(this.tableTaxInfoByVillOrWord.YearlyRentAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetYearlyRentAmountNull() {
                this[this.tableTaxInfoByVillOrWord.YearlyRentAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalTaxNull() {
                return this.IsNull(this.tableTaxInfoByVillOrWord.TotalTaxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalTaxNull() {
                this[this.tableTaxInfoByVillOrWord.TotalTaxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVillageNameNull() {
                return this.IsNull(this.tableTaxInfoByVillOrWord.VillageNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVillageNameNull() {
                this[this.tableTaxInfoByVillOrWord.VillageNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPeviousDueNull() {
                return this.IsNull(this.tableTaxInfoByVillOrWord.PeviousDueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPeviousDueNull() {
                this[this.tableTaxInfoByVillOrWord.PeviousDueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCommentsNull() {
                return this.IsNull(this.tableTaxInfoByVillOrWord.CommentsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCommentsNull() {
                this[this.tableTaxInfoByVillOrWord.CommentsColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class TopSheetTblRow : global::System.Data.DataRow {
            
            private TopSheetTblDataTable tableTopSheetTbl;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TopSheetTblRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTopSheetTbl = ((TopSheetTblDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TotalPreviousDueCollectAmount {
                get {
                    try {
                        return ((string)(this[this.tableTopSheetTbl.TotalPreviousDueCollectAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalPreviousDueCollectAmount\' in table \'TopSheetTbl\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableTopSheetTbl.TotalPreviousDueCollectAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TotalCollection {
                get {
                    try {
                        return ((string)(this[this.tableTopSheetTbl.TotalCollectionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalCollection\' in table \'TopSheetTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTopSheetTbl.TotalCollectionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TotalDues {
                get {
                    try {
                        return ((string)(this[this.tableTopSheetTbl.TotalDuesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalDues\' in table \'TopSheetTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTopSheetTbl.TotalDuesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string YearName {
                get {
                    try {
                        return ((string)(this[this.tableTopSheetTbl.YearNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'YearName\' in table \'TopSheetTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTopSheetTbl.YearNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string WardNo {
                get {
                    try {
                        return ((string)(this[this.tableTopSheetTbl.WardNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WardNo\' in table \'TopSheetTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTopSheetTbl.WardNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TotalVillageCount {
                get {
                    try {
                        return ((string)(this[this.tableTopSheetTbl.TotalVillageCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalVillageCount\' in table \'TopSheetTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTopSheetTbl.TotalVillageCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TotalHoldingCount {
                get {
                    try {
                        return ((string)(this[this.tableTopSheetTbl.TotalHoldingCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalHoldingCount\' in table \'TopSheetTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTopSheetTbl.TotalHoldingCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TotalTaxCollectHoldingCount {
                get {
                    try {
                        return ((string)(this[this.tableTopSheetTbl.TotalTaxCollectHoldingCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalTaxCollectHoldingCount\' in table \'TopSheetTbl\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableTopSheetTbl.TotalTaxCollectHoldingCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DueTotalTaxCollectHoldingCount {
                get {
                    try {
                        return ((string)(this[this.tableTopSheetTbl.DueTotalTaxCollectHoldingCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DueTotalTaxCollectHoldingCount\' in table \'TopSheetTbl\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableTopSheetTbl.DueTotalTaxCollectHoldingCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TotalTaxAmount {
                get {
                    try {
                        return ((string)(this[this.tableTopSheetTbl.TotalTaxAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalTaxAmount\' in table \'TopSheetTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTopSheetTbl.TotalTaxAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TotalCollectTaxAmount {
                get {
                    try {
                        return ((string)(this[this.tableTopSheetTbl.TotalCollectTaxAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalCollectTaxAmount\' in table \'TopSheetTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTopSheetTbl.TotalCollectTaxAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TotalDueTaxAmount {
                get {
                    try {
                        return ((string)(this[this.tableTopSheetTbl.TotalDueTaxAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalDueTaxAmount\' in table \'TopSheetTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTopSheetTbl.TotalDueTaxAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TotalPreviousDueAmount {
                get {
                    try {
                        return ((string)(this[this.tableTopSheetTbl.TotalPreviousDueAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalPreviousDueAmount\' in table \'TopSheetTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTopSheetTbl.TotalPreviousDueAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TaxCollectPercentage {
                get {
                    try {
                        return ((string)(this[this.tableTopSheetTbl.TaxCollectPercentageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TaxCollectPercentage\' in table \'TopSheetTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTopSheetTbl.TaxCollectPercentageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Comments {
                get {
                    try {
                        return ((string)(this[this.tableTopSheetTbl.CommentsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comments\' in table \'TopSheetTbl\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTopSheetTbl.CommentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalPreviousDueCollectAmountNull() {
                return this.IsNull(this.tableTopSheetTbl.TotalPreviousDueCollectAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalPreviousDueCollectAmountNull() {
                this[this.tableTopSheetTbl.TotalPreviousDueCollectAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalCollectionNull() {
                return this.IsNull(this.tableTopSheetTbl.TotalCollectionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalCollectionNull() {
                this[this.tableTopSheetTbl.TotalCollectionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalDuesNull() {
                return this.IsNull(this.tableTopSheetTbl.TotalDuesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalDuesNull() {
                this[this.tableTopSheetTbl.TotalDuesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsYearNameNull() {
                return this.IsNull(this.tableTopSheetTbl.YearNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetYearNameNull() {
                this[this.tableTopSheetTbl.YearNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWardNoNull() {
                return this.IsNull(this.tableTopSheetTbl.WardNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWardNoNull() {
                this[this.tableTopSheetTbl.WardNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalVillageCountNull() {
                return this.IsNull(this.tableTopSheetTbl.TotalVillageCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalVillageCountNull() {
                this[this.tableTopSheetTbl.TotalVillageCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalHoldingCountNull() {
                return this.IsNull(this.tableTopSheetTbl.TotalHoldingCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalHoldingCountNull() {
                this[this.tableTopSheetTbl.TotalHoldingCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalTaxCollectHoldingCountNull() {
                return this.IsNull(this.tableTopSheetTbl.TotalTaxCollectHoldingCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalTaxCollectHoldingCountNull() {
                this[this.tableTopSheetTbl.TotalTaxCollectHoldingCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDueTotalTaxCollectHoldingCountNull() {
                return this.IsNull(this.tableTopSheetTbl.DueTotalTaxCollectHoldingCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDueTotalTaxCollectHoldingCountNull() {
                this[this.tableTopSheetTbl.DueTotalTaxCollectHoldingCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalTaxAmountNull() {
                return this.IsNull(this.tableTopSheetTbl.TotalTaxAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalTaxAmountNull() {
                this[this.tableTopSheetTbl.TotalTaxAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalCollectTaxAmountNull() {
                return this.IsNull(this.tableTopSheetTbl.TotalCollectTaxAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalCollectTaxAmountNull() {
                this[this.tableTopSheetTbl.TotalCollectTaxAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalDueTaxAmountNull() {
                return this.IsNull(this.tableTopSheetTbl.TotalDueTaxAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalDueTaxAmountNull() {
                this[this.tableTopSheetTbl.TotalDueTaxAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalPreviousDueAmountNull() {
                return this.IsNull(this.tableTopSheetTbl.TotalPreviousDueAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalPreviousDueAmountNull() {
                this[this.tableTopSheetTbl.TotalPreviousDueAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTaxCollectPercentageNull() {
                return this.IsNull(this.tableTopSheetTbl.TaxCollectPercentageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTaxCollectPercentageNull() {
                this[this.tableTopSheetTbl.TaxCollectPercentageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCommentsNull() {
                return this.IsNull(this.tableTopSheetTbl.CommentsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCommentsNull() {
                this[this.tableTopSheetTbl.CommentsColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class DailyPostingRow : global::System.Data.DataRow {
            
            private DailyPostingDataTable tableDailyPosting;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal DailyPostingRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDailyPosting = ((DailyPostingDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string HoldingNo {
                get {
                    try {
                        return ((string)(this[this.tableDailyPosting.HoldingNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HoldingNo\' in table \'DailyPosting\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDailyPosting.HoldingNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string HouseOwnerName {
                get {
                    try {
                        return ((string)(this[this.tableDailyPosting.HouseOwnerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HouseOwnerName\' in table \'DailyPosting\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDailyPosting.HouseOwnerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MobileNo {
                get {
                    try {
                        return ((string)(this[this.tableDailyPosting.MobileNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MobileNo\' in table \'DailyPosting\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDailyPosting.MobileNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string YearName {
                get {
                    try {
                        return ((string)(this[this.tableDailyPosting.YearNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'YearName\' in table \'DailyPosting\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDailyPosting.YearNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TaxPaymentDateStr {
                get {
                    try {
                        return ((string)(this[this.tableDailyPosting.TaxPaymentDateStrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TaxPaymentDateStr\' in table \'DailyPosting\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDailyPosting.TaxPaymentDateStrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string VillageName {
                get {
                    try {
                        return ((string)(this[this.tableDailyPosting.VillageNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VillageName\' in table \'DailyPosting\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDailyPosting.VillageNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OutstandingAmount {
                get {
                    try {
                        return ((string)(this[this.tableDailyPosting.OutstandingAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OutstandingAmount\' in table \'DailyPosting\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDailyPosting.OutstandingAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string WardNo {
                get {
                    try {
                        return ((string)(this[this.tableDailyPosting.WardNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WardNo\' in table \'DailyPosting\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDailyPosting.WardNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PreviousDueAmount {
                get {
                    try {
                        return ((string)(this[this.tableDailyPosting.PreviousDueAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PreviousDueAmount\' in table \'DailyPosting\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDailyPosting.PreviousDueAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TotalCollectAmount {
                get {
                    try {
                        return ((string)(this[this.tableDailyPosting.TotalCollectAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalCollectAmount\' in table \'DailyPosting\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDailyPosting.TotalCollectAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHoldingNoNull() {
                return this.IsNull(this.tableDailyPosting.HoldingNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHoldingNoNull() {
                this[this.tableDailyPosting.HoldingNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHouseOwnerNameNull() {
                return this.IsNull(this.tableDailyPosting.HouseOwnerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHouseOwnerNameNull() {
                this[this.tableDailyPosting.HouseOwnerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMobileNoNull() {
                return this.IsNull(this.tableDailyPosting.MobileNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMobileNoNull() {
                this[this.tableDailyPosting.MobileNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsYearNameNull() {
                return this.IsNull(this.tableDailyPosting.YearNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetYearNameNull() {
                this[this.tableDailyPosting.YearNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTaxPaymentDateStrNull() {
                return this.IsNull(this.tableDailyPosting.TaxPaymentDateStrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTaxPaymentDateStrNull() {
                this[this.tableDailyPosting.TaxPaymentDateStrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVillageNameNull() {
                return this.IsNull(this.tableDailyPosting.VillageNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVillageNameNull() {
                this[this.tableDailyPosting.VillageNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOutstandingAmountNull() {
                return this.IsNull(this.tableDailyPosting.OutstandingAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOutstandingAmountNull() {
                this[this.tableDailyPosting.OutstandingAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWardNoNull() {
                return this.IsNull(this.tableDailyPosting.WardNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWardNoNull() {
                this[this.tableDailyPosting.WardNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPreviousDueAmountNull() {
                return this.IsNull(this.tableDailyPosting.PreviousDueAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPreviousDueAmountNull() {
                this[this.tableDailyPosting.PreviousDueAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalCollectAmountNull() {
                return this.IsNull(this.tableDailyPosting.TotalCollectAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalCollectAmountNull() {
                this[this.tableDailyPosting.TotalCollectAmountColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class TranRow : global::System.Data.DataRow {
            
            private TranDataTable tableTran;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TranRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTran = ((TranDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string WardNo {
                get {
                    try {
                        return ((string)(this[this.tableTran.WardNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WardNo\' in table \'Tran\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTran.WardNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TotalHouseOwnerStr {
                get {
                    try {
                        return ((string)(this[this.tableTran.TotalHouseOwnerStrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalHouseOwnerStr\' in table \'Tran\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTran.TotalHouseOwnerStrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string GrandTotalHouseOwnerStr {
                get {
                    try {
                        return ((string)(this[this.tableTran.GrandTotalHouseOwnerStrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GrandTotalHouseOwnerStr\' in table \'Tran\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTran.GrandTotalHouseOwnerStrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TotalMaleStr {
                get {
                    try {
                        return ((string)(this[this.tableTran.TotalMaleStrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalMaleStr\' in table \'Tran\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTran.TotalMaleStrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string GrandTotalMaleStr {
                get {
                    try {
                        return ((string)(this[this.tableTran.GrandTotalMaleStrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GrandTotalMaleStr\' in table \'Tran\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTran.GrandTotalMaleStrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TotalFemaleStr {
                get {
                    try {
                        return ((string)(this[this.tableTran.TotalFemaleStrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalFemaleStr\' in table \'Tran\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTran.TotalFemaleStrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string GrandTotalFemaleStr {
                get {
                    try {
                        return ((string)(this[this.tableTran.GrandTotalFemaleStrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GrandTotalFemaleStr\' in table \'Tran\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTran.GrandTotalFemaleStrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TotalSocialBenefitTakingCountStr {
                get {
                    try {
                        return ((string)(this[this.tableTran.TotalSocialBenefitTakingCountStrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalSocialBenefitTakingCountStr\' in table \'Tran\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableTran.TotalSocialBenefitTakingCountStrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string GrandTotalSocialBenefitTakingCountStr {
                get {
                    try {
                        return ((string)(this[this.tableTran.GrandTotalSocialBenefitTakingCountStrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GrandTotalSocialBenefitTakingCountStr\' in table \'Tran\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableTran.GrandTotalSocialBenefitTakingCountStrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TotalPoorStr {
                get {
                    try {
                        return ((string)(this[this.tableTran.TotalPoorStrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalPoorStr\' in table \'Tran\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTran.TotalPoorStrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string GrandTotalPoorStr {
                get {
                    try {
                        return ((string)(this[this.tableTran.GrandTotalPoorStrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GrandTotalPoorStr\' in table \'Tran\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTran.GrandTotalPoorStrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TotalMidPoorStr {
                get {
                    try {
                        return ((string)(this[this.tableTran.TotalMidPoorStrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalMidPoorStr\' in table \'Tran\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTran.TotalMidPoorStrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string GrandTotalMidPoorStr {
                get {
                    try {
                        return ((string)(this[this.tableTran.GrandTotalMidPoorStrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GrandTotalMidPoorStr\' in table \'Tran\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTran.GrandTotalMidPoorStrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TotalRichStr {
                get {
                    try {
                        return ((string)(this[this.tableTran.TotalRichStrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalRichStr\' in table \'Tran\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTran.TotalRichStrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string GrandTotalRichStr {
                get {
                    try {
                        return ((string)(this[this.tableTran.GrandTotalRichStrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GrandTotalRichStr\' in table \'Tran\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTran.GrandTotalRichStrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TotalPopulationStr {
                get {
                    try {
                        return ((string)(this[this.tableTran.TotalPopulationStrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalPopulationStr\' in table \'Tran\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTran.TotalPopulationStrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string GrandTotalPopulationStr {
                get {
                    try {
                        return ((string)(this[this.tableTran.GrandTotalPopulationStrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GrandTotalPopulationStr\' in table \'Tran\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTran.GrandTotalPopulationStrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWardNoNull() {
                return this.IsNull(this.tableTran.WardNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWardNoNull() {
                this[this.tableTran.WardNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalHouseOwnerStrNull() {
                return this.IsNull(this.tableTran.TotalHouseOwnerStrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalHouseOwnerStrNull() {
                this[this.tableTran.TotalHouseOwnerStrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGrandTotalHouseOwnerStrNull() {
                return this.IsNull(this.tableTran.GrandTotalHouseOwnerStrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGrandTotalHouseOwnerStrNull() {
                this[this.tableTran.GrandTotalHouseOwnerStrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalMaleStrNull() {
                return this.IsNull(this.tableTran.TotalMaleStrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalMaleStrNull() {
                this[this.tableTran.TotalMaleStrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGrandTotalMaleStrNull() {
                return this.IsNull(this.tableTran.GrandTotalMaleStrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGrandTotalMaleStrNull() {
                this[this.tableTran.GrandTotalMaleStrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalFemaleStrNull() {
                return this.IsNull(this.tableTran.TotalFemaleStrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalFemaleStrNull() {
                this[this.tableTran.TotalFemaleStrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGrandTotalFemaleStrNull() {
                return this.IsNull(this.tableTran.GrandTotalFemaleStrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGrandTotalFemaleStrNull() {
                this[this.tableTran.GrandTotalFemaleStrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalSocialBenefitTakingCountStrNull() {
                return this.IsNull(this.tableTran.TotalSocialBenefitTakingCountStrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalSocialBenefitTakingCountStrNull() {
                this[this.tableTran.TotalSocialBenefitTakingCountStrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGrandTotalSocialBenefitTakingCountStrNull() {
                return this.IsNull(this.tableTran.GrandTotalSocialBenefitTakingCountStrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGrandTotalSocialBenefitTakingCountStrNull() {
                this[this.tableTran.GrandTotalSocialBenefitTakingCountStrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalPoorStrNull() {
                return this.IsNull(this.tableTran.TotalPoorStrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalPoorStrNull() {
                this[this.tableTran.TotalPoorStrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGrandTotalPoorStrNull() {
                return this.IsNull(this.tableTran.GrandTotalPoorStrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGrandTotalPoorStrNull() {
                this[this.tableTran.GrandTotalPoorStrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalMidPoorStrNull() {
                return this.IsNull(this.tableTran.TotalMidPoorStrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalMidPoorStrNull() {
                this[this.tableTran.TotalMidPoorStrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGrandTotalMidPoorStrNull() {
                return this.IsNull(this.tableTran.GrandTotalMidPoorStrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGrandTotalMidPoorStrNull() {
                this[this.tableTran.GrandTotalMidPoorStrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalRichStrNull() {
                return this.IsNull(this.tableTran.TotalRichStrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalRichStrNull() {
                this[this.tableTran.TotalRichStrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGrandTotalRichStrNull() {
                return this.IsNull(this.tableTran.GrandTotalRichStrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGrandTotalRichStrNull() {
                this[this.tableTran.GrandTotalRichStrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalPopulationStrNull() {
                return this.IsNull(this.tableTran.TotalPopulationStrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalPopulationStrNull() {
                this[this.tableTran.TotalPopulationStrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGrandTotalPopulationStrNull() {
                return this.IsNull(this.tableTran.GrandTotalPopulationStrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGrandTotalPopulationStrNull() {
                this[this.tableTran.GrandTotalPopulationStrColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class SingleHoldingTaxRowChangeEvent : global::System.EventArgs {
            
            private SingleHoldingTaxRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SingleHoldingTaxRowChangeEvent(SingleHoldingTaxRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SingleHoldingTaxRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class TaxReceiptRowChangeEvent : global::System.EventArgs {
            
            private TaxReceiptRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TaxReceiptRowChangeEvent(TaxReceiptRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TaxReceiptRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class TaxInfoByVillOrWordRowChangeEvent : global::System.EventArgs {
            
            private TaxInfoByVillOrWordRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TaxInfoByVillOrWordRowChangeEvent(TaxInfoByVillOrWordRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TaxInfoByVillOrWordRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class TopSheetTblRowChangeEvent : global::System.EventArgs {
            
            private TopSheetTblRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TopSheetTblRowChangeEvent(TopSheetTblRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TopSheetTblRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class DailyPostingRowChangeEvent : global::System.EventArgs {
            
            private DailyPostingRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DailyPostingRowChangeEvent(DailyPostingRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DailyPostingRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class TranRowChangeEvent : global::System.EventArgs {
            
            private TranRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TranRowChangeEvent(TranRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TranRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591